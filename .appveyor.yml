version: '0.2.0.{build}'
image: Visual Studio 2017
platform:
  - Any CPU

clone_folder: c:\projects\libskycoin-dotnet

# build Configuration, i.e. Debug, Release, etc.
# configuration:
#   - Release
#   - Debug
environment:
  global:
    GOOS: windows
    GOARCH: amd64
    GOPATH: c:\projects\libskycoin-dotnet\gopath
    MINGW_W64: c:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64
    # APPVEYOR_RDP_PASSWORD: defineYourPasswordHere

stack: go 1.11

# Enable Windows RDP Client Access to Build Worker
# init:
#   - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

# Install dev dependencies
install:
  - set PATH=%MINGW_W64%\bin;%PATH%
  - cmd: cp %MINGW_W64%\bin\mingw32-make.exe %MINGW_W64%\bin\make.exe
  - cmd: git submodule update --init --recursive --remote
  - echo %GOPATH%
  - cmd: cd c:\projects\libskycoin-dotnet\gopath
  - cmd: git checkout origin/stdevEclipse_t1568_swig_files
  - cmd: go get github.com/gz-c/gox
  - cmd: go get -t ./...
  - cmd: cd c:\projects\libskycoin-dotnet
  - cmd: curl -fsSL -o swigwin-3.0.12.zip "https://downloads.sourceforge.net/project/swig/swigwin/swigwin-3.0.12/swigwin-3.0.12.zip?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fswig%2Ffiles%2Fswigwin%2Fswigwin-3.0.12%2Fswigwin-3.0.12.zip%2Fdownload%3Fuse_mirror%3Dayera&ts=1531774939"
  - cmd: 7z x swigwin-3.0.12.zip
  - cmd: set PATH=%APPVEYOR_BUILD_FOLDER%\swigwin-3.0.12;%PATH%
  - cmd: swig -version

# scripts to run before build
# packages from nuget
before_build:
  - cd c:\projects\libskycoin-dotnet
  - nuget restore LibskycoinNet.sln
  - nuget install NUnit.Runners -Version 2.6.4 -OutputDirectory testrunner

# use custom build_script
build_script:
  - cmd: make test

# # use custom build_script
# build_script:
#   - msbuild /p:Configuration=Release LibskycoinNet.sln

# # to run tests against only selected assemblies and/or categories
# test:
#   assemblies:
#     only:
#       - LibskycoinNetTest\bin\Release\LibskycoinNetTest.dll

deploy: off 

# on successful build
on_success:
  - ECHO "BUILD VICTORY"

# on build failure
on_failure:
  - ECHO "TRY AND TRY AGAIN"

# after build failure or success
on_finish:
  #  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  # https://www.appveyor.com/docs/environment-variables/
  # Environment variables that are set by AppVeyor for every build:
  # APPVEYOR - True if build runs in AppVeyor environment;
  - ECHO %APPVEYOR%
  # CI - True if build runs in AppVeyor environment;
  - ECHO %CI%
  # APPVEYOR_API_URL - AppVeyor Build Agent API URL;
  - ECHO %APPVEYOR_API_URL%
  # APPVEYOR_ACCOUNT_NAME - account name;
  - ECHO %APPVEYOR_ACCOUNT_NAME%
  # APPVEYOR_PROJECT_ID - AppVeyor unique project ID;
  - ECHO %APPVEYOR_PROJECT_ID%
  # APPVEYOR_PROJECT_NAME - project name;
  - ECHO %APPVEYOR_PROJECT_NAME%
  # APPVEYOR_PROJECT_SLUG - project slug (as seen in project details URL);
  - ECHO %APPVEYOR_PROJECT_SLUG%
  # APPVEYOR_BUILD_FOLDER - path to clone directory;
  - ECHO %APPVEYOR_BUILD_FOLDER%
  # APPVEYOR_BUILD_ID - AppVeyor unique build ID;
  - ECHO %APPVEYOR_BUILD_ID%
  # APPVEYOR_BUILD_NUMBER - build number;
  - ECHO %APPVEYOR_BUILD_NUMBER%
  # APPVEYOR_BUILD_VERSION - build version;
  - ECHO %APPVEYOR_BUILD_VERSION%
  # APPVEYOR_PULL_REQUEST_NUMBER - GitHub Pull Request number;
  - ECHO %APPVEYOR_PULL_REQUEST_NUMBER%
  # APPVEYOR_PULL_REQUEST_TITLE - GitHub Pull Request title
  - ECHO %APPVEYOR_PULL_REQUEST_TITLE%
  # APPVEYOR_JOB_ID - AppVeyor unique job ID;
  - ECHO %APPVEYOR_JOB_ID%
  # APPVEYOR_JOB_NAME - job name;
  - ECHO %APPVEYOR_JOB_NAME%
  # APPVEYOR_REPO_PROVIDER - github, bitbucket, kiln, vso or gitlab;
  - ECHO %APPVEYOR_REPO_PROVIDER%
  # APPVEYOR_REPO_SCM - git or mercurial;
  - ECHO %APPVEYOR_REPO_SCM%
  # APPVEYOR_REPO_NAME - repository name in format owner-name/repo-name;
  - ECHO %APPVEYOR_REPO_NAME%
  # APPVEYOR_REPO_BRANCH - build branch. For Pull Request commits it is base branch PR is merging into;
  - ECHO %APPVEYOR_REPO_BRANCH%
  # APPVEYOR_REPO_TAG - true if build has started by pushed tag; otherwise false;
  - ECHO %APPVEYOR_REPO_TAG%
  # APPVEYOR_REPO_TAG_NAME - contains tag name for builds started by tag; otherwise this variable is undefined;
  - ECHO %APPVEYOR_REPO_TAG_NAME%
  # APPVEYOR_REPO_COMMIT - commit ID (SHA);
  - ECHO %APPVEYOR_REPO_COMMIT%
  # APPVEYOR_REPO_COMMIT_AUTHOR - commit author’s name;
  - ECHO %APPVEYOR_REPO_COMMIT_AUTHOR%
  # APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL - commit author’s email address;
  - ECHO %APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL%
  # APPVEYOR_REPO_COMMIT_TIMESTAMP - commit date/time;
  - ECHO %APPVEYOR_REPO_COMMIT_TIMESTAMP%
  #
  # commit message disabled; can cause false failure
  #
  # APPVEYOR_REPO_COMMIT_MESSAGE - commit message;
  #  - ECHO %APPVEYOR_REPO_COMMIT_MESSAGE%
  # APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED - the rest of commit message after line break (if exists);
  #  - ECHO %APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED%
  # APPVEYOR_SCHEDULED_BUILD - True if the build runs by scheduler;
  - ECHO %APPVEYOR_SCHEDULED_BUILD%
  # APPVEYOR_FORCED_BUILD (True or undefined) - builds started by “New build” button or from the same API;
  - ECHO %APPVEYOR_FORCED_BUILD%
  # APPVEYOR_RE_BUILD (True or undefined) - build started by “Re-build commit/PR” button of from the same API;
  - ECHO %APPVEYOR_RE_BUILD%
  # PLATFORM - platform name set on Build tab of project settings (or through platform parameter in appveyor.yml);
  - ECHO %PLATFORM%
  # CONFIGURATION - configuration name set on Build tab of project settings (or through configuration parameter in appveyor.yml);
  - ECHO %CONFIGURATION%
