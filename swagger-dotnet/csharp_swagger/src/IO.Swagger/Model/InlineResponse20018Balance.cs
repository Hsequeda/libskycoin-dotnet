/* 
 * Skycoin REST API.
 *
 * Skycoin is a next-generation cryptocurrency.
 *
 * OpenAPI spec version: 0.25.0
 * Contact: skycoin.doe@example.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponse20018Balance
    /// </summary>
    [DataContract]
    public partial class InlineResponse20018Balance :  IEquatable<InlineResponse20018Balance>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse20018Balance" /> class.
        /// </summary>
        /// <param name="Confirmed">Confirmed.</param>
        /// <param name="Predicted">Predicted.</param>
        public InlineResponse20018Balance(InlineResponse2002Addresses Confirmed = default(InlineResponse2002Addresses), InlineResponse2002Addresses Predicted = default(InlineResponse2002Addresses))
        {
            this.Confirmed = Confirmed;
            this.Predicted = Predicted;
        }
        
        /// <summary>
        /// Gets or Sets Confirmed
        /// </summary>
        [DataMember(Name="confirmed", EmitDefaultValue=false)]
        public InlineResponse2002Addresses Confirmed { get; set; }

        /// <summary>
        /// Gets or Sets Predicted
        /// </summary>
        [DataMember(Name="predicted", EmitDefaultValue=false)]
        public InlineResponse2002Addresses Predicted { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse20018Balance {\n");
            sb.Append("  Confirmed: ").Append(Confirmed).Append("\n");
            sb.Append("  Predicted: ").Append(Predicted).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse20018Balance);
        }

        /// <summary>
        /// Returns true if InlineResponse20018Balance instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse20018Balance to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse20018Balance input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Confirmed == input.Confirmed ||
                    (this.Confirmed != null &&
                    this.Confirmed.Equals(input.Confirmed))
                ) && 
                (
                    this.Predicted == input.Predicted ||
                    (this.Predicted != null &&
                    this.Predicted.Equals(input.Predicted))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Confirmed != null)
                    hashCode = hashCode * 59 + this.Confirmed.GetHashCode();
                if (this.Predicted != null)
                    hashCode = hashCode * 59 + this.Predicted.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
