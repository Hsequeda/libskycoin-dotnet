//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace skycoin {

public class skycoin {
  public static void destroy_cipher_SecKeys(SWIGTYPE_p_cipher_SecKeys p) {
    skycoinPINVOKE.destroy_cipher_SecKeys(SWIGTYPE_p_cipher_SecKeys.getCPtr(p));
  }

  public static int equalSlices(GoSlice slice1, GoSlice slice2, int elem_size) {
    int ret = skycoinPINVOKE.equalSlices(GoSlice.getCPtr(slice1), GoSlice.getCPtr(slice2), elem_size);
    return ret;
  }

  public static int equalTransactions(coin__Transaction t1, coin__Transaction t2) {
    int ret = skycoinPINVOKE.equalTransactions(coin__Transaction.getCPtr(t1), coin__Transaction.getCPtr(t2));
    return ret;
  }

  public static int equalTransactionsArrays(SWIGTYPE_p_GoSlice_ pTxs1, SWIGTYPE_p_GoSlice_ pTxs2) {
    int ret = skycoinPINVOKE.equalTransactionsArrays(SWIGTYPE_p_GoSlice_.getCPtr(pTxs1), SWIGTYPE_p_GoSlice_.getCPtr(pTxs2));
    return ret;
  }

  public static int equalBlockHeaders(coin__BlockHeader bh1, coin__BlockHeader bh2) {
    int ret = skycoinPINVOKE.equalBlockHeaders(coin__BlockHeader.getCPtr(bh1), coin__BlockHeader.getCPtr(bh2));
    return ret;
  }

  public static uint SKY_coin_NewBlock(SWIGTYPE_p_Handle p0, ulong p1, SWIGTYPE_p_a_32__GoUint8_ p2, SWIGTYPE_p_Handle p3, SWIGTYPE_p_FeeCalculator p4) {
    uint ret = skycoinPINVOKE.SKY_coin_NewBlock(SWIGTYPE_p_Handle.getCPtr(p0), p1, SWIGTYPE_p_a_32__GoUint8_.getCPtr(p2), SWIGTYPE_p_Handle.getCPtr(p3), SWIGTYPE_p_FeeCalculator.getCPtr(p4));
    return ret;
  }

  public static uint SKY_coin_SignedBlock_VerifySignature(coin__SignedBlock p0, SWIGTYPE_p_cipher_PubKey p1) {
    uint ret = skycoinPINVOKE.SKY_coin_SignedBlock_VerifySignature(coin__SignedBlock.getCPtr(p0), SWIGTYPE_p_a_33__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_NewGenesisBlock(cipher__Address p0, ulong p1, ulong p2) {
    uint ret = skycoinPINVOKE.SKY_coin_NewGenesisBlock(cipher__Address.getCPtr(p0), p1, p2);
    return ret;
  }

  public static uint SKY_coin_Block_HashHeader(SWIGTYPE_p_Handle p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Block_HashHeader(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Block_PreHashHeader(SWIGTYPE_p_Handle p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Block_PreHashHeader(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Block_Time(SWIGTYPE_p_Handle p0, SWIGTYPE_p_unsigned_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Block_Time(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_unsigned_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Block_Seq(SWIGTYPE_p_Handle p0, SWIGTYPE_p_unsigned_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Block_Seq(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_unsigned_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Block_HashBody(SWIGTYPE_p_Handle p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Block_HashBody(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Block_Size(SWIGTYPE_p_Handle p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Block_Size(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Block_String(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Block_String(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Block_GetTransaction(SWIGTYPE_p_Handle p0, SWIGTYPE_p_a_32__GoUint8_ p1, SWIGTYPE_p_unsigned_char p3) {
    uint ret = skycoinPINVOKE.SKY_coin_Block_GetTransaction(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1), SWIGTYPE_p_unsigned_char.getCPtr(p3));
    return ret;
  }

  public static uint SKY_coin_NewBlockHeader(coin__BlockHeader p0, SWIGTYPE_p_a_32__GoUint8_ p1, ulong p2, ulong p3, SWIGTYPE_p_Handle p4, coin__BlockHeader p5) {
    uint ret = skycoinPINVOKE.SKY_coin_NewBlockHeader(coin__BlockHeader.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1), p2, p3, SWIGTYPE_p_Handle.getCPtr(p4), coin__BlockHeader.getCPtr(p5));
    return ret;
  }

  public static uint SKY_coin_BlockHeader_Hash(coin__BlockHeader p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_BlockHeader_Hash(coin__BlockHeader.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_BlockHeader_Bytes(coin__BlockHeader p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_BlockHeader_Bytes(coin__BlockHeader.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_BlockHeader_String(coin__BlockHeader p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_BlockHeader_String(coin__BlockHeader.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_BlockBody_Hash(SWIGTYPE_p_Handle p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_BlockBody_Hash(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_BlockBody_Size(SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_BlockBody_Size(SWIGTYPE_p_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_BlockBody_Bytes(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_BlockBody_Bytes(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_CreateUnspents(coin__BlockHeader p0, SWIGTYPE_p_Handle p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_coin_CreateUnspents(coin__BlockHeader.getCPtr(p0), SWIGTYPE_p_Handle.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_CreateUnspent(coin__BlockHeader p0, SWIGTYPE_p_Handle p1, long p2, coin__UxOut p3) {
    uint ret = skycoinPINVOKE.SKY_coin_CreateUnspent(coin__BlockHeader.getCPtr(p0), SWIGTYPE_p_Handle.getCPtr(p1), p2, coin__UxOut.getCPtr(p3));
    return ret;
  }

  public static uint SKY_coin_GetBlockObject(SWIGTYPE_p_Handle p0, SWIGTYPE_p_p_coin__Block p1) {
    uint ret = skycoinPINVOKE.SKY_coin_GetBlockObject(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_p_coin__Block.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_GetBlockBody(SWIGTYPE_p_Handle p0) {
    uint ret = skycoinPINVOKE.SKY_coin_GetBlockBody(SWIGTYPE_p_Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_coin_NewEmptyBlock(SWIGTYPE_p_Handle p0) {
    uint ret = skycoinPINVOKE.SKY_coin_NewEmptyBlock(SWIGTYPE_p_Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_bip39_NewDefaultMnemomic(SWIGTYPE_p_GoString_ p0) {
    uint ret = skycoinPINVOKE.SKY_bip39_NewDefaultMnemomic(SWIGTYPE_p_GoString_.getCPtr(p0));
    return ret;
  }

  public static uint SKY_bip39_NewEntropy(long p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_bip39_NewEntropy(p0, SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_bip39_NewMnemonic(GoSlice p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_bip39_NewMnemonic(GoSlice.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_bip39_MnemonicToByteArray(_GoString_ p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_bip39_MnemonicToByteArray(_GoString_.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_bip39_IsMnemonicValid(_GoString_ p0, SWIGTYPE_p_unsigned_char p1) {
    uint ret = skycoinPINVOKE.SKY_bip39_IsMnemonicValid(_GoString_.getCPtr(p0), SWIGTYPE_p_unsigned_char.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_NewClient(_GoString_ p0, SWIGTYPE_p_Client__Handle p1) {
    uint ret = skycoinPINVOKE.SKY_api_NewClient(_GoString_.getCPtr(p0), SWIGTYPE_p_Client__Handle.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_CSRF(SWIGTYPE_p_Client__Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_CSRF(SWIGTYPE_p_Client__Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_Client_Version(SWIGTYPE_p_Client__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_api_Client_Version(SWIGTYPE_p_Client__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_api_Client_Outputs(SWIGTYPE_p_Client__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_api_Client_Outputs(SWIGTYPE_p_Client__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_api_Client_OutputsForAddresses(SWIGTYPE_p_Client__Handle p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_OutputsForAddresses(SWIGTYPE_p_Client__Handle.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_OutputsForHashes(SWIGTYPE_p_Client__Handle p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_OutputsForHashes(SWIGTYPE_p_Client__Handle.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_CoinSupply(SWIGTYPE_p_Client__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_api_Client_CoinSupply(SWIGTYPE_p_Client__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_api_Client_BlockByHash(SWIGTYPE_p_Client__Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_BlockByHash(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_BlockBySeq(SWIGTYPE_p_Client__Handle p0, ulong p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_BlockBySeq(SWIGTYPE_p_Client__Handle.getCPtr(p0), p1);
    return ret;
  }

  public static uint SKY_api_Client_Blocks(SWIGTYPE_p_Client__Handle p0, ulong p1, ulong p2) {
    uint ret = skycoinPINVOKE.SKY_api_Client_Blocks(SWIGTYPE_p_Client__Handle.getCPtr(p0), p1, p2);
    return ret;
  }

  public static uint SKY_api_Client_LastBlocks(SWIGTYPE_p_Client__Handle p0, ulong p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_LastBlocks(SWIGTYPE_p_Client__Handle.getCPtr(p0), p1);
    return ret;
  }

  public static uint SKY_api_Client_BlockchainMetadata(SWIGTYPE_p_Client__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_api_Client_BlockchainMetadata(SWIGTYPE_p_Client__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_api_Client_BlockchainProgress(SWIGTYPE_p_Client__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_api_Client_BlockchainProgress(SWIGTYPE_p_Client__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_api_Client_Balance(SWIGTYPE_p_Client__Handle p0, GoSlice p1, wallet__BalancePair p2) {
    uint ret = skycoinPINVOKE.SKY_api_Client_Balance(SWIGTYPE_p_Client__Handle.getCPtr(p0), GoSlice.getCPtr(p1), wallet__BalancePair.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_UxOut(SWIGTYPE_p_Client__Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_UxOut(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_AddressUxOuts(SWIGTYPE_p_Client__Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_AddressUxOuts(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_Wallet(SWIGTYPE_p_Client__Handle p0, _GoString_ p1, SWIGTYPE_p_WalletResponse__Handle p2) {
    uint ret = skycoinPINVOKE.SKY_api_Client_Wallet(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1), SWIGTYPE_p_WalletResponse__Handle.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_Wallets(SWIGTYPE_p_Client__Handle p0, SWIGTYPE_p_Wallets__Handle p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_Wallets(SWIGTYPE_p_Client__Handle.getCPtr(p0), SWIGTYPE_p_Wallets__Handle.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_Client_CreateUnencryptedWallet(SWIGTYPE_p_Client__Handle p0, _GoString_ p1, _GoString_ p2, long p3, SWIGTYPE_p_WalletResponse__Handle p4) {
    uint ret = skycoinPINVOKE.SKY_api_Client_CreateUnencryptedWallet(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1), _GoString_.getCPtr(p2), p3, SWIGTYPE_p_WalletResponse__Handle.getCPtr(p4));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_CreateEncryptedWallet(SWIGTYPE_p_Client__Handle p0, _GoString_ p1, _GoString_ p2, _GoString_ p3, long p4, SWIGTYPE_p_WalletResponse__Handle p5) {
    uint ret = skycoinPINVOKE.SKY_api_Client_CreateEncryptedWallet(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1), _GoString_.getCPtr(p2), _GoString_.getCPtr(p3), p4, SWIGTYPE_p_WalletResponse__Handle.getCPtr(p5));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_NewWalletAddress(SWIGTYPE_p_Client__Handle p0, _GoString_ p1, long p2, _GoString_ p3, SWIGTYPE_p_Strings__Handle p4) {
    uint ret = skycoinPINVOKE.SKY_api_Client_NewWalletAddress(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1), p2, _GoString_.getCPtr(p3), SWIGTYPE_p_Strings__Handle.getCPtr(p4));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_WalletBalance(SWIGTYPE_p_Client__Handle p0, _GoString_ p1, wallet__BalancePair p2) {
    uint ret = skycoinPINVOKE.SKY_api_Client_WalletBalance(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1), wallet__BalancePair.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_Spend(SWIGTYPE_p_Client__Handle p0, _GoString_ p1, _GoString_ p2, ulong p3, _GoString_ p4) {
    uint ret = skycoinPINVOKE.SKY_api_Client_Spend(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1), _GoString_.getCPtr(p2), p3, _GoString_.getCPtr(p4));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_CreateTransaction(SWIGTYPE_p_Client__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_api_Client_CreateTransaction(SWIGTYPE_p_Client__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_api_Client_UpdateWallet(SWIGTYPE_p_Client__Handle p0, _GoString_ p1, _GoString_ p2) {
    uint ret = skycoinPINVOKE.SKY_api_Client_UpdateWallet(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1), _GoString_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_WalletFolderName(SWIGTYPE_p_Client__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_api_Client_WalletFolderName(SWIGTYPE_p_Client__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_api_Client_NewSeed(SWIGTYPE_p_Client__Handle p0, long p1, SWIGTYPE_p_GoString_ p2) {
    uint ret = skycoinPINVOKE.SKY_api_Client_NewSeed(SWIGTYPE_p_Client__Handle.getCPtr(p0), p1, SWIGTYPE_p_GoString_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_api_Client_GetWalletSeed(SWIGTYPE_p_Client__Handle p0, _GoString_ p1, _GoString_ p2, SWIGTYPE_p_GoString_ p3) {
    uint ret = skycoinPINVOKE.SKY_api_Client_GetWalletSeed(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1), _GoString_.getCPtr(p2), SWIGTYPE_p_GoString_.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_NetworkConnection(SWIGTYPE_p_Client__Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_NetworkConnection(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_NetworkConnections(SWIGTYPE_p_Client__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_api_Client_NetworkConnections(SWIGTYPE_p_Client__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_api_Client_NetworkDefaultConnections(SWIGTYPE_p_Client__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_api_Client_NetworkDefaultConnections(SWIGTYPE_p_Client__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_api_Client_NetworkTrustedConnections(SWIGTYPE_p_Client__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_api_Client_NetworkTrustedConnections(SWIGTYPE_p_Client__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_api_Client_NetworkExchangeableConnections(SWIGTYPE_p_Client__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_api_Client_NetworkExchangeableConnections(SWIGTYPE_p_Client__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_api_Client_PendingTransactions(SWIGTYPE_p_Client__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_api_Client_PendingTransactions(SWIGTYPE_p_Client__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_api_Client_Transaction(SWIGTYPE_p_Client__Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_Transaction(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_Transactions(SWIGTYPE_p_Client__Handle p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_Transactions(SWIGTYPE_p_Client__Handle.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_ConfirmedTransactions(SWIGTYPE_p_Client__Handle p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_ConfirmedTransactions(SWIGTYPE_p_Client__Handle.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_UnconfirmedTransactions(SWIGTYPE_p_Client__Handle p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_UnconfirmedTransactions(SWIGTYPE_p_Client__Handle.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_InjectTransaction(SWIGTYPE_p_Client__Handle p0, SWIGTYPE_p_Handle p1, SWIGTYPE_p_GoString_ p2) {
    uint ret = skycoinPINVOKE.SKY_api_Client_InjectTransaction(SWIGTYPE_p_Client__Handle.getCPtr(p0), SWIGTYPE_p_Handle.getCPtr(p1), SWIGTYPE_p_GoString_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_api_Client_ResendUnconfirmedTransactions(SWIGTYPE_p_Client__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_api_Client_ResendUnconfirmedTransactions(SWIGTYPE_p_Client__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_api_Client_RawTransaction(SWIGTYPE_p_Client__Handle p0, _GoString_ p1, SWIGTYPE_p_GoString_ p2) {
    uint ret = skycoinPINVOKE.SKY_api_Client_RawTransaction(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1), SWIGTYPE_p_GoString_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_AddressTransactions(SWIGTYPE_p_Client__Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_AddressTransactions(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_Richlist(SWIGTYPE_p_Client__Handle p0, api__RichlistParams p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_Richlist(SWIGTYPE_p_Client__Handle.getCPtr(p0), api__RichlistParams.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_Client_AddressCount(SWIGTYPE_p_Client__Handle p0, SWIGTYPE_p_unsigned_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_AddressCount(SWIGTYPE_p_Client__Handle.getCPtr(p0), SWIGTYPE_p_unsigned_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_Client_UnloadWallet(SWIGTYPE_p_Client__Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_Client_UnloadWallet(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_Health(SWIGTYPE_p_Client__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_api_Client_Health(SWIGTYPE_p_Client__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_api_Client_EncryptWallet(SWIGTYPE_p_Client__Handle p0, _GoString_ p1, _GoString_ p2, SWIGTYPE_p_WalletResponse__Handle p3) {
    uint ret = skycoinPINVOKE.SKY_api_Client_EncryptWallet(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1), _GoString_.getCPtr(p2), SWIGTYPE_p_WalletResponse__Handle.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_Client_DecryptWallet(SWIGTYPE_p_Client__Handle p0, _GoString_ p1, _GoString_ p2, SWIGTYPE_p_WalletResponse__Handle p3) {
    uint ret = skycoinPINVOKE.SKY_api_Client_DecryptWallet(SWIGTYPE_p_Client__Handle.getCPtr(p0), _GoString_.getCPtr(p1), _GoString_.getCPtr(p2), SWIGTYPE_p_WalletResponse__Handle.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_XY_Print(secp256k1go__XY p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XY_Print(secp256k1go__XY.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_XY_ParsePubkey(secp256k1go__XY p0, GoSlice p1, SWIGTYPE_p_unsigned_char p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XY_ParsePubkey(secp256k1go__XY.getCPtr(p0), GoSlice.getCPtr(p1), SWIGTYPE_p_unsigned_char.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_XY_Bytes(secp256k1go__XY p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XY_Bytes(secp256k1go__XY.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_XY_BytesUncompressed(secp256k1go__XY p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XY_BytesUncompressed(secp256k1go__XY.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_XY_SetXY(secp256k1go__XY p0, secp256k1go__Field p1, secp256k1go__Field p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XY_SetXY(secp256k1go__XY.getCPtr(p0), secp256k1go__Field.getCPtr(p1), secp256k1go__Field.getCPtr(p2));
    return ret;
  }

  public static uint SKY_secp256k1go_XY_IsValid(secp256k1go__XY p0, SWIGTYPE_p_unsigned_char p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XY_IsValid(secp256k1go__XY.getCPtr(p0), SWIGTYPE_p_unsigned_char.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_XY_SetXYZ(secp256k1go__XY p0, secp256k1go__XYZ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XY_SetXYZ(secp256k1go__XY.getCPtr(p0), secp256k1go__XYZ.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_XY_Neg(secp256k1go__XY p0, secp256k1go__XY p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XY_Neg(secp256k1go__XY.getCPtr(p0), secp256k1go__XY.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_XY_SetXO(secp256k1go__XY p0, secp256k1go__Field p1, byte p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XY_SetXO(secp256k1go__XY.getCPtr(p0), secp256k1go__Field.getCPtr(p1), p2);
    return ret;
  }

  public static uint SKY_secp256k1go_XY_AddXY(secp256k1go__XY p0, secp256k1go__XY p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XY_AddXY(secp256k1go__XY.getCPtr(p0), secp256k1go__XY.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_XY_GetPublicKey(secp256k1go__XY p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XY_GetPublicKey(secp256k1go__XY.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_NewWalletResponse(SWIGTYPE_p_Handle p0, SWIGTYPE_p_WalletResponse__Handle p1) {
    uint ret = skycoinPINVOKE.SKY_api_NewWalletResponse(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_WalletResponse__Handle.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_NewCreateTransactionResponse(SWIGTYPE_p_Handle p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_api_NewCreateTransactionResponse(SWIGTYPE_p_Handle.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_NewCreatedTransaction(SWIGTYPE_p_Handle p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_api_NewCreatedTransaction(SWIGTYPE_p_Handle.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_api_CreatedTransaction_ToTransaction(SWIGTYPE_p_Handle p0) {
    uint ret = skycoinPINVOKE.SKY_api_CreatedTransaction_ToTransaction(SWIGTYPE_p_Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_api_NewCreatedTransactionOutput(coin__TransactionOutput p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_NewCreatedTransactionOutput(coin__TransactionOutput.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_NewCreatedTransactionInput(wallet__UxBalance p0) {
    uint ret = skycoinPINVOKE.SKY_api_NewCreatedTransactionInput(wallet__UxBalance.getCPtr(p0));
    return ret;
  }

  public static uint SKY_wallet_NewError(GoInterface p0) {
    uint ret = skycoinPINVOKE.SKY_wallet_NewError(GoInterface.getCPtr(p0));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_NewWallet(_GoString_ p0, SWIGTYPE_p_Handle p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_NewWallet(_GoString_.getCPtr(p0), SWIGTYPE_p_Handle.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_Wallet_Lock(SWIGTYPE_p_Handle p0, GoSlice p1, _GoString_ p2) {
    uint ret = skycoinPINVOKE.SKY_wallet_Wallet_Lock(SWIGTYPE_p_Handle.getCPtr(p0), GoSlice.getCPtr(p1), _GoString_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_Wallet_Unlock(SWIGTYPE_p_Handle p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_Wallet_Unlock(SWIGTYPE_p_Handle.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_Load(_GoString_ p0) {
    uint ret = skycoinPINVOKE.SKY_wallet_Load(_GoString_.getCPtr(p0));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_Wallet_Save(SWIGTYPE_p_Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_Wallet_Save(SWIGTYPE_p_Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_Wallet_Validate(SWIGTYPE_p_Handle p0) {
    uint ret = skycoinPINVOKE.SKY_wallet_Wallet_Validate(SWIGTYPE_p_Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_wallet_Wallet_Type(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_Wallet_Type(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_wallet_Wallet_Version(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_Wallet_Version(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_wallet_Wallet_Filename(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_Wallet_Filename(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_wallet_Wallet_Label(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_Wallet_Label(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_wallet_Wallet_IsEncrypted(SWIGTYPE_p_Handle p0, SWIGTYPE_p_unsigned_char p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_Wallet_IsEncrypted(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_unsigned_char.getCPtr(p1));
    return ret;
  }

  public static uint SKY_wallet_Wallet_GenerateAddresses(SWIGTYPE_p_Handle p0, ulong p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_wallet_Wallet_GenerateAddresses(SWIGTYPE_p_Handle.getCPtr(p0), p1, SWIGTYPE_p_GoSlice_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_wallet_Wallet_GetAddresses(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_Wallet_GetAddresses(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_wallet_Wallet_GetEntry(SWIGTYPE_p_Handle p0, cipher__Address p1, wallet__Entry p2, SWIGTYPE_p_unsigned_char p3) {
    uint ret = skycoinPINVOKE.SKY_wallet_Wallet_GetEntry(SWIGTYPE_p_Handle.getCPtr(p0), cipher__Address.getCPtr(p1), wallet__Entry.getCPtr(p2), SWIGTYPE_p_unsigned_char.getCPtr(p3));
    return ret;
  }

  public static uint SKY_wallet_Wallet_AddEntry(SWIGTYPE_p_Handle p0, wallet__Entry p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_Wallet_AddEntry(SWIGTYPE_p_Handle.getCPtr(p0), wallet__Entry.getCPtr(p1));
    return ret;
  }

  public static uint SKY_wallet_DistributeSpendHours(ulong p0, ulong p1, byte p2, SWIGTYPE_p_unsigned_long_long p3, SWIGTYPE_p_GoSlice_ p4, SWIGTYPE_p_unsigned_long_long p5) {
    uint ret = skycoinPINVOKE.SKY_wallet_DistributeSpendHours(p0, p1, p2, SWIGTYPE_p_unsigned_long_long.getCPtr(p3), SWIGTYPE_p_GoSlice_.getCPtr(p4), SWIGTYPE_p_unsigned_long_long.getCPtr(p5));
    return ret;
  }

  public static uint SKY_wallet_DistributeCoinHoursProportional(GoSlice p0, ulong p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_wallet_DistributeCoinHoursProportional(GoSlice.getCPtr(p0), p1, SWIGTYPE_p_GoSlice_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_NewUxBalances(ulong p0, SWIGTYPE_p_GoSlice_ p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_wallet_NewUxBalances(p0, SWIGTYPE_p_GoSlice_.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_wallet_NewUxBalance(ulong p0, coin__UxOut p1, wallet__UxBalance p2) {
    uint ret = skycoinPINVOKE.SKY_wallet_NewUxBalance(p0, coin__UxOut.getCPtr(p1), wallet__UxBalance.getCPtr(p2));
    return ret;
  }

  public static uint SKY_wallet_ChooseSpendsMinimizeUxOuts(GoSlice p0, ulong p1, ulong p2, SWIGTYPE_p_GoSlice_ p3) {
    uint ret = skycoinPINVOKE.SKY_wallet_ChooseSpendsMinimizeUxOuts(GoSlice.getCPtr(p0), p1, p2, SWIGTYPE_p_GoSlice_.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_ChooseSpendsMaximizeUxOuts(GoSlice p0, ulong p1, ulong p2, SWIGTYPE_p_GoSlice_ p3) {
    uint ret = skycoinPINVOKE.SKY_wallet_ChooseSpendsMaximizeUxOuts(GoSlice.getCPtr(p0), p1, p2, SWIGTYPE_p_GoSlice_.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cli_CheckWalletBalance(SWIGTYPE_p_Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cli_CheckWalletBalance(SWIGTYPE_p_Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cli_GetBalanceOfAddresses(SWIGTYPE_p_Handle p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_cli_GetBalanceOfAddresses(SWIGTYPE_p_Handle.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_NewReadableEntry(wallet__Entry p0, SWIGTYPE_p_ReadableEntry__Handle p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_NewReadableEntry(wallet__Entry.getCPtr(p0), SWIGTYPE_p_ReadableEntry__Handle.getCPtr(p1));
    return ret;
  }

  public static uint SKY_wallet_LoadReadableEntry(_GoString_ p0, SWIGTYPE_p_ReadableEntry__Handle p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_LoadReadableEntry(_GoString_.getCPtr(p0), SWIGTYPE_p_ReadableEntry__Handle.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_NewReadableEntryFromPubkey(_GoString_ p0, SWIGTYPE_p_ReadableEntry__Handle p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_NewReadableEntryFromPubkey(_GoString_.getCPtr(p0), SWIGTYPE_p_ReadableEntry__Handle.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_ReadableEntry_Save(SWIGTYPE_p_ReadableEntry__Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_ReadableEntry_Save(SWIGTYPE_p_ReadableEntry__Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_LoadReadableWallet(_GoString_ p0, SWIGTYPE_p_ReadableWallet__Handle p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_LoadReadableWallet(_GoString_.getCPtr(p0), SWIGTYPE_p_ReadableWallet__Handle.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_ReadableWallet_Save(SWIGTYPE_p_ReadableWallet__Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_ReadableWallet_Save(SWIGTYPE_p_ReadableWallet__Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_ReadableWallet_Load(SWIGTYPE_p_ReadableWallet__Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_ReadableWallet_Load(SWIGTYPE_p_ReadableWallet__Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_ReadableWallet_Erase(SWIGTYPE_p_ReadableWallet__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_wallet_ReadableWallet_Erase(SWIGTYPE_p_ReadableWallet__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_secp256k1go_DecompressPoint(GoSlice p0, byte p1, GoSlice p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_DecompressPoint(GoSlice.getCPtr(p0), p1, GoSlice.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_RecoverPublicKey(GoSlice p0, GoSlice p1, long p2, SWIGTYPE_p_GoSlice_ p3, SWIGTYPE_p_long_long p4) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_RecoverPublicKey(GoSlice.getCPtr(p0), GoSlice.getCPtr(p1), p2, SWIGTYPE_p_GoSlice_.getCPtr(p3), SWIGTYPE_p_long_long.getCPtr(p4));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_Multiply(GoSlice p0, GoSlice p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Multiply(GoSlice.getCPtr(p0), GoSlice.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_BaseMultiply(GoSlice p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_BaseMultiply(GoSlice.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_BaseMultiplyAdd(GoSlice p0, GoSlice p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_BaseMultiplyAdd(GoSlice.getCPtr(p0), GoSlice.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_GeneratePublicKey(GoSlice p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_GeneratePublicKey(GoSlice.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_SeckeyIsValid(GoSlice p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_SeckeyIsValid(GoSlice.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_PubkeyIsValid(GoSlice p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_PubkeyIsValid(GoSlice.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_base58_String2Hex(_GoString_ p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_base58_String2Hex(_GoString_.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_base58_Base58_ToInt(_GoString_ p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_base58_Base58_ToInt(_GoString_.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_base58_Base58_ToHex(_GoString_ p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_base58_Base58_ToHex(_GoString_.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_base58_Base58_Base582Int(_GoString_ p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_base58_Base58_Base582Int(_GoString_.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_base58_Base582Hex(_GoString_ p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_base58_Base582Hex(_GoString_.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_base58_Base58_BitHex(_GoString_ p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_base58_Base58_BitHex(_GoString_.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_base58_Int2Base58(long p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_base58_Int2Base58(p0, SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_base58_Hex2Base58(GoSlice p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_base58_Hex2Base58(GoSlice.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_base58_Hex2Base58String(GoSlice p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_base58_Hex2Base58String(GoSlice.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_base58_Hex2Base58Str(GoSlice p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_base58_Hex2Base58Str(GoSlice.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cli_GenerateWallet(_GoString_ p0, ulong p2) {
    uint ret = skycoinPINVOKE.SKY_cli_GenerateWallet(_GoString_.getCPtr(p0), p2);
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cli_MakeAlphanumericSeed(SWIGTYPE_p_GoString_ p0) {
    uint ret = skycoinPINVOKE.SKY_cli_MakeAlphanumericSeed(SWIGTYPE_p_GoString_.getCPtr(p0));
    return ret;
  }

  public static uint SKY_webrpc_NewClient(_GoString_ p0) {
    uint ret = skycoinPINVOKE.SKY_webrpc_NewClient(_GoString_.getCPtr(p0));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_webrpc_Client_CSRF(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_webrpc_Client_CSRF(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_webrpc_Client_InjectTransaction(SWIGTYPE_p_Handle p0, SWIGTYPE_p_Handle p1, SWIGTYPE_p_GoString_ p2) {
    uint ret = skycoinPINVOKE.SKY_webrpc_Client_InjectTransaction(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_Handle.getCPtr(p1), SWIGTYPE_p_GoString_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_webrpc_Client_GetStatus(SWIGTYPE_p_Handle p0) {
    uint ret = skycoinPINVOKE.SKY_webrpc_Client_GetStatus(SWIGTYPE_p_Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_webrpc_Client_GetTransactionByID(SWIGTYPE_p_Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_webrpc_Client_GetTransactionByID(SWIGTYPE_p_Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_webrpc_Client_GetAddressUxOuts(SWIGTYPE_p_Handle p0, GoSlice p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_webrpc_Client_GetAddressUxOuts(SWIGTYPE_p_Handle.getCPtr(p0), GoSlice.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_webrpc_Client_GetBlocks(SWIGTYPE_p_Handle p0, ulong p1, ulong p2, SWIGTYPE_p_GoSlice_ p3) {
    uint ret = skycoinPINVOKE.SKY_webrpc_Client_GetBlocks(SWIGTYPE_p_Handle.getCPtr(p0), p1, p2, SWIGTYPE_p_GoSlice_.getCPtr(p3));
    return ret;
  }

  public static uint SKY_webrpc_Client_GetBlocksBySeq(SWIGTYPE_p_Handle p0, GoSlice p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_webrpc_Client_GetBlocksBySeq(SWIGTYPE_p_Handle.getCPtr(p0), GoSlice.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_webrpc_Client_GetLastBlocks(SWIGTYPE_p_Handle p0, ulong p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_webrpc_Client_GetLastBlocks(SWIGTYPE_p_Handle.getCPtr(p0), p1, SWIGTYPE_p_GoSlice_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_browser_Open(_GoString_ p0) {
    uint ret = skycoinPINVOKE.SKY_browser_Open(_GoString_.getCPtr(p0));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_iputil_LocalhostIP(SWIGTYPE_p_GoString_ p0) {
    uint ret = skycoinPINVOKE.SKY_iputil_LocalhostIP(SWIGTYPE_p_GoString_.getCPtr(p0));
    return ret;
  }

  public static uint SKY_iputil_IsLocalhost(_GoString_ p0, SWIGTYPE_p_unsigned_char p1) {
    uint ret = skycoinPINVOKE.SKY_iputil_IsLocalhost(_GoString_.getCPtr(p0), SWIGTYPE_p_unsigned_char.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_iputil_SplitAddr(_GoString_ p0, SWIGTYPE_p_GoString_ p1, SWIGTYPE_p_unsigned_short p2) {
    uint ret = skycoinPINVOKE.SKY_iputil_SplitAddr(_GoString_.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1), SWIGTYPE_p_unsigned_short.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_encoder_StructField_String(encoder__StructField p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_encoder_StructField_String(encoder__StructField.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_encoder_ParseFields(GoSlice p0, GoSlice p1, SWIGTYPE_p_GoStringMap_ p2) {
    uint ret = skycoinPINVOKE.SKY_encoder_ParseFields(GoSlice.getCPtr(p0), GoSlice.getCPtr(p1), SWIGTYPE_p_GoStringMap_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_SumSHA256(GoSlice p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_SumSHA256(GoSlice.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_RandByte(long p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_RandByte(p0, SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cli_GenerateAddressesInFile(_GoString_ p0, ulong p1, SWIGTYPE_p_Handle p2, SWIGTYPE_p_GoSlice_ p3) {
    uint ret = skycoinPINVOKE.SKY_cli_GenerateAddressesInFile(_GoString_.getCPtr(p0), p1, SWIGTYPE_p_Handle.getCPtr(p2), SWIGTYPE_p_GoSlice_.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cli_FormatAddressesAsJSON(GoSlice p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cli_FormatAddressesAsJSON(GoSlice.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cli_FormatAddressesAsJoinedArray(GoSlice p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cli_FormatAddressesAsJoinedArray(GoSlice.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cli_AddressesToStrings(GoSlice p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_cli_AddressesToStrings(GoSlice.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_coin_AddUint64(ulong p0, ulong p1, SWIGTYPE_p_unsigned_long_long p2) {
    uint ret = skycoinPINVOKE.SKY_coin_AddUint64(p0, p1, SWIGTYPE_p_unsigned_long_long.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_Uint64ToInt64(ulong p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Uint64ToInt64(p0, SWIGTYPE_p_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Int64ToUint64(long p0, SWIGTYPE_p_unsigned_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Int64ToUint64(p0, SWIGTYPE_p_unsigned_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_PubKeySlice_Len(SWIGTYPE_p_GoSlice_ p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_PubKeySlice_Len(SWIGTYPE_p_GoSlice_.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_PubKeySlice_Less(SWIGTYPE_p_GoSlice_ p0, long p1, long p2, SWIGTYPE_p_unsigned_char p3) {
    uint ret = skycoinPINVOKE.SKY_cipher_PubKeySlice_Less(SWIGTYPE_p_GoSlice_.getCPtr(p0), p1, p2, SWIGTYPE_p_unsigned_char.getCPtr(p3));
    return ret;
  }

  public static uint SKY_cipher_PubKeySlice_Swap(SWIGTYPE_p_GoSlice_ p0, long p1, long p2) {
    uint ret = skycoinPINVOKE.SKY_cipher_PubKeySlice_Swap(SWIGTYPE_p_GoSlice_.getCPtr(p0), p1, p2);
    return ret;
  }

  public static uint SKY_cipher_RandByte(long p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_RandByte(p0, SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_NewPubKey(GoSlice p0, SWIGTYPE_p_cipher_PubKey p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_NewPubKey(GoSlice.getCPtr(p0), SWIGTYPE_p_a_33__GoUint8_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_PubKeyFromHex(_GoString_ p0, SWIGTYPE_p_cipher_PubKey p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_PubKeyFromHex(_GoString_.getCPtr(p0), SWIGTYPE_p_a_33__GoUint8_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_PubKeyFromSecKey(SWIGTYPE_p_a_32__GoUint8_ p0, SWIGTYPE_p_cipher_PubKey p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_PubKeyFromSecKey(SWIGTYPE_p_a_32__GoUint8_.getCPtr(p0), SWIGTYPE_p_a_33__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_PubKeyFromSig(SWIGTYPE_p_a_65__GoUint8_ p0, SWIGTYPE_p_a_32__GoUint8_ p1, SWIGTYPE_p_cipher_PubKey p2) {
    uint ret = skycoinPINVOKE.SKY_cipher_PubKeyFromSig(SWIGTYPE_p_a_65__GoUint8_.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1), SWIGTYPE_p_a_33__GoUint8_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_cipher_PubKey_Verify(SWIGTYPE_p_cipher_PubKey p0) {
    uint ret = skycoinPINVOKE.SKY_cipher_PubKey_Verify(SWIGTYPE_p_a_33__GoUint8_.getCPtr(p0));
    return ret;
  }

  public static uint SKY_cipher_PubKey_Hex(SWIGTYPE_p_cipher_PubKey p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_PubKey_Hex(SWIGTYPE_p_a_33__GoUint8_.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_PubKey_ToAddressHash(SWIGTYPE_p_cipher_PubKey p0, SWIGTYPE_p_a_20__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_PubKey_ToAddressHash(SWIGTYPE_p_a_33__GoUint8_.getCPtr(p0), SWIGTYPE_p_a_20__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_NewSecKey(GoSlice p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_NewSecKey(GoSlice.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_SecKeyFromHex(_GoString_ p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_SecKeyFromHex(_GoString_.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_SecKey_Verify(SWIGTYPE_p_a_32__GoUint8_ p0) {
    uint ret = skycoinPINVOKE.SKY_cipher_SecKey_Verify(SWIGTYPE_p_a_32__GoUint8_.getCPtr(p0));
    return ret;
  }

  public static uint SKY_cipher_SecKey_Hex(SWIGTYPE_p_a_32__GoUint8_ p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_SecKey_Hex(SWIGTYPE_p_a_32__GoUint8_.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_ECDH(SWIGTYPE_p_cipher_PubKey p0, SWIGTYPE_p_a_32__GoUint8_ p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_cipher_ECDH(SWIGTYPE_p_a_33__GoUint8_.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_cipher_NewSig(GoSlice p0, SWIGTYPE_p_a_65__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_NewSig(GoSlice.getCPtr(p0), SWIGTYPE_p_a_65__GoUint8_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_SigFromHex(_GoString_ p0, SWIGTYPE_p_a_65__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_SigFromHex(_GoString_.getCPtr(p0), SWIGTYPE_p_a_65__GoUint8_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_Sig_Hex(SWIGTYPE_p_a_65__GoUint8_ p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_Sig_Hex(SWIGTYPE_p_a_65__GoUint8_.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_SignHash(SWIGTYPE_p_a_32__GoUint8_ p0, SWIGTYPE_p_a_32__GoUint8_ p1, SWIGTYPE_p_a_65__GoUint8_ p2) {
    uint ret = skycoinPINVOKE.SKY_cipher_SignHash(SWIGTYPE_p_a_32__GoUint8_.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1), SWIGTYPE_p_a_65__GoUint8_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_cipher_ChkSig(cipher__Address p0, SWIGTYPE_p_a_32__GoUint8_ p1, SWIGTYPE_p_a_65__GoUint8_ p2) {
    uint ret = skycoinPINVOKE.SKY_cipher_ChkSig(cipher__Address.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1), SWIGTYPE_p_a_65__GoUint8_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_cipher_VerifySignedHash(SWIGTYPE_p_a_65__GoUint8_ p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_VerifySignedHash(SWIGTYPE_p_a_65__GoUint8_.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_VerifySignature(SWIGTYPE_p_cipher_PubKey p0, SWIGTYPE_p_a_65__GoUint8_ p1, SWIGTYPE_p_a_32__GoUint8_ p2) {
    uint ret = skycoinPINVOKE.SKY_cipher_VerifySignature(SWIGTYPE_p_a_33__GoUint8_.getCPtr(p0), SWIGTYPE_p_a_65__GoUint8_.getCPtr(p1), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_cipher_GenerateDeterministicKeyPair(GoSlice p0, SWIGTYPE_p_cipher_PubKey p1, SWIGTYPE_p_a_32__GoUint8_ p2) {
    uint ret = skycoinPINVOKE.SKY_cipher_GenerateDeterministicKeyPair(GoSlice.getCPtr(p0), SWIGTYPE_p_a_33__GoUint8_.getCPtr(p1), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_DeterministicKeyPairIterator(GoSlice p0, SWIGTYPE_p_GoSlice_ p1, SWIGTYPE_p_cipher_PubKey p2, SWIGTYPE_p_a_32__GoUint8_ p3) {
    uint ret = skycoinPINVOKE.SKY_cipher_DeterministicKeyPairIterator(GoSlice.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1), SWIGTYPE_p_a_33__GoUint8_.getCPtr(p2), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_GenerateDeterministicKeyPairs(GoSlice p0, long p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_cipher_GenerateDeterministicKeyPairs(GoSlice.getCPtr(p0), p1, SWIGTYPE_p_GoSlice_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_GenerateDeterministicKeyPairsSeed(GoSlice p0, long p1, SWIGTYPE_p_GoSlice_ p2, SWIGTYPE_p_GoSlice_ p3) {
    uint ret = skycoinPINVOKE.SKY_cipher_GenerateDeterministicKeyPairsSeed(GoSlice.getCPtr(p0), p1, SWIGTYPE_p_GoSlice_.getCPtr(p2), SWIGTYPE_p_GoSlice_.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_TestSecKey(SWIGTYPE_p_a_32__GoUint8_ p0) {
    uint ret = skycoinPINVOKE.SKY_cipher_TestSecKey(SWIGTYPE_p_a_32__GoUint8_.getCPtr(p0));
    return ret;
  }

  public static uint SKY_cipher_TestSecKeyHash(SWIGTYPE_p_a_32__GoUint8_ p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_TestSecKeyHash(SWIGTYPE_p_a_32__GoUint8_.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_GenerateKeyPair(SWIGTYPE_p_cipher_PubKey p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_GenerateKeyPair(SWIGTYPE_p_a_33__GoUint8_.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_Signature_Create() {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Signature_Create();
    return ret;
  }

  public static uint SKY_secp256k1go_Signature_GetR(SWIGTYPE_p_Handle p0) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Signature_GetR(SWIGTYPE_p_Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_secp256k1go_Signature_GetS(SWIGTYPE_p_Handle p0) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Signature_GetS(SWIGTYPE_p_Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_secp256k1go_Signature_Print(SWIGTYPE_p_Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Signature_Print(SWIGTYPE_p_Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_Signature_Verify(SWIGTYPE_p_Handle p0, secp256k1go__XY p1, SWIGTYPE_p_Handle p2, SWIGTYPE_p_unsigned_char p3) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Signature_Verify(SWIGTYPE_p_Handle.getCPtr(p0), secp256k1go__XY.getCPtr(p1), SWIGTYPE_p_Handle.getCPtr(p2), SWIGTYPE_p_unsigned_char.getCPtr(p3));
    return ret;
  }

  public static uint SKY_secp256k1go_Signature_Recover(SWIGTYPE_p_Handle p0, secp256k1go__XY p1, SWIGTYPE_p_Handle p2, long p3, SWIGTYPE_p_unsigned_char p4) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Signature_Recover(SWIGTYPE_p_Handle.getCPtr(p0), secp256k1go__XY.getCPtr(p1), SWIGTYPE_p_Handle.getCPtr(p2), p3, SWIGTYPE_p_unsigned_char.getCPtr(p4));
    return ret;
  }

  public static uint SKY_secp256k1go_Signature_Sign(SWIGTYPE_p_Handle p0, SWIGTYPE_p_Handle p1, SWIGTYPE_p_Handle p2, SWIGTYPE_p_Handle p3, SWIGTYPE_p_long_long p4, SWIGTYPE_p_long_long p5) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Signature_Sign(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_Handle.getCPtr(p1), SWIGTYPE_p_Handle.getCPtr(p2), SWIGTYPE_p_Handle.getCPtr(p3), SWIGTYPE_p_long_long.getCPtr(p4), SWIGTYPE_p_long_long.getCPtr(p5));
    return ret;
  }

  public static uint SKY_secp256k1go_Signature_ParseBytes(SWIGTYPE_p_Handle p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Signature_ParseBytes(SWIGTYPE_p_Handle.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_Signature_Bytes(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Signature_Bytes(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cli_App_Run(SWIGTYPE_p_App__Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cli_App_Run(SWIGTYPE_p_App__Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cli_Config_GetCoin(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cli_Config_GetCoin(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cli_Config_GetRPCAddress(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cli_Config_GetRPCAddress(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cli_RPCClientFromApp(SWIGTYPE_p_App__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_cli_RPCClientFromApp(SWIGTYPE_p_App__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_cli_Getenv(_GoString_ p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cli_Getenv(_GoString_.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cli_Setenv(_GoString_ p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cli_Setenv(_GoString_.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_poly1305_Verify(SWIGTYPE_p_GoSlice_ p0, GoSlice p1, SWIGTYPE_p_GoSlice_ p2, SWIGTYPE_p_unsigned_char p3) {
    uint ret = skycoinPINVOKE.SKY_poly1305_Verify(SWIGTYPE_p_GoSlice_.getCPtr(p0), GoSlice.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2), SWIGTYPE_p_unsigned_char.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_NewBalance(ulong p0, ulong p1, wallet__Balance p2) {
    uint ret = skycoinPINVOKE.SKY_wallet_NewBalance(p0, p1, wallet__Balance.getCPtr(p2));
    return ret;
  }

  public static uint SKY_wallet_NewBalanceFromUxOut(ulong p0, coin__UxOut p1, wallet__Balance p2) {
    uint ret = skycoinPINVOKE.SKY_wallet_NewBalanceFromUxOut(p0, coin__UxOut.getCPtr(p1), wallet__Balance.getCPtr(p2));
    return ret;
  }

  public static uint SKY_wallet_Balance_Add(wallet__Balance p0, wallet__Balance p1, wallet__Balance p2) {
    uint ret = skycoinPINVOKE.SKY_wallet_Balance_Add(wallet__Balance.getCPtr(p0), wallet__Balance.getCPtr(p1), wallet__Balance.getCPtr(p2));
    return ret;
  }

  public static uint SKY_wallet_Balance_Sub(wallet__Balance p0, wallet__Balance p1, wallet__Balance p2) {
    uint ret = skycoinPINVOKE.SKY_wallet_Balance_Sub(wallet__Balance.getCPtr(p0), wallet__Balance.getCPtr(p1), wallet__Balance.getCPtr(p2));
    return ret;
  }

  public static uint SKY_wallet_Balance_Equals(wallet__Balance p0, wallet__Balance p1, SWIGTYPE_p_unsigned_char p2) {
    uint ret = skycoinPINVOKE.SKY_wallet_Balance_Equals(wallet__Balance.getCPtr(p0), wallet__Balance.getCPtr(p1), SWIGTYPE_p_unsigned_char.getCPtr(p2));
    return ret;
  }

  public static uint SKY_wallet_Balance_IsZero(wallet__Balance p0, SWIGTYPE_p_unsigned_char p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_Balance_IsZero(wallet__Balance.getCPtr(p0), SWIGTYPE_p_unsigned_char.getCPtr(p1));
    return ret;
  }

  public static uint SKY_utc_UnixNow(SWIGTYPE_p_long_long p0) {
    uint ret = skycoinPINVOKE.SKY_utc_UnixNow(SWIGTYPE_p_long_long.getCPtr(p0));
    return ret;
  }

  public static uint SKY_httphelper_Address_UnmarshalJSON(httphelper__Address p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_httphelper_Address_UnmarshalJSON(httphelper__Address.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_httphelper_Address_MarshalJSON(httphelper__Address p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_httphelper_Address_MarshalJSON(httphelper__Address.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_httphelper_Coins_UnmarshalJSON(SWIGTYPE_p_GoUint64_ p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_httphelper_Coins_UnmarshalJSON(SWIGTYPE_p_GoUint64_.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_httphelper_Coins_MarshalJSON(SWIGTYPE_p_GoUint64_ p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_httphelper_Coins_MarshalJSON(SWIGTYPE_p_GoUint64_.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_httphelper_Coins_Value(SWIGTYPE_p_GoUint64_ p0, SWIGTYPE_p_unsigned_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_httphelper_Coins_Value(SWIGTYPE_p_GoUint64_.getCPtr(p0), SWIGTYPE_p_unsigned_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_httphelper_Hours_UnmarshalJSON(SWIGTYPE_p_GoUint64_ p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_httphelper_Hours_UnmarshalJSON(SWIGTYPE_p_GoUint64_.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_httphelper_Hours_MarshalJSON(SWIGTYPE_p_GoUint64_ p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_httphelper_Hours_MarshalJSON(SWIGTYPE_p_GoUint64_.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_httphelper_Hours_Value(SWIGTYPE_p_GoUint64_ p0, SWIGTYPE_p_unsigned_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_httphelper_Hours_Value(SWIGTYPE_p_GoUint64_.getCPtr(p0), SWIGTYPE_p_unsigned_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_wallet_Entry_Verify(wallet__Entry p0) {
    uint ret = skycoinPINVOKE.SKY_wallet_Entry_Verify(wallet__Entry.getCPtr(p0));
    return ret;
  }

  public static uint SKY_wallet_Entry_VerifyPublic(wallet__Entry p0) {
    uint ret = skycoinPINVOKE.SKY_wallet_Entry_VerifyPublic(wallet__Entry.getCPtr(p0));
    return ret;
  }

  public static uint SKY_wallet_CreateAddresses(_GoString_ p0, _GoString_ p1, long p2, byte p3, SWIGTYPE_p_ReadableWallet__Handle p4) {
    uint ret = skycoinPINVOKE.SKY_wallet_CreateAddresses(_GoString_.getCPtr(p0), _GoString_.getCPtr(p1), p2, p3, SWIGTYPE_p_ReadableWallet__Handle.getCPtr(p4));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_GetSkycoinWalletEntry(SWIGTYPE_p_cipher_PubKey p0, SWIGTYPE_p_a_32__GoUint8_ p1, SWIGTYPE_p_ReadableEntry__Handle p2) {
    uint ret = skycoinPINVOKE.SKY_wallet_GetSkycoinWalletEntry(SWIGTYPE_p_a_33__GoUint8_.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1), SWIGTYPE_p_ReadableEntry__Handle.getCPtr(p2));
    return ret;
  }

  public static uint SKY_wallet_GetBitcoinWalletEntry(SWIGTYPE_p_cipher_PubKey p0, SWIGTYPE_p_a_32__GoUint8_ p1, SWIGTYPE_p_ReadableEntry__Handle p2) {
    uint ret = skycoinPINVOKE.SKY_wallet_GetBitcoinWalletEntry(SWIGTYPE_p_a_33__GoUint8_.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1), SWIGTYPE_p_ReadableEntry__Handle.getCPtr(p2));
    return ret;
  }

  public static uint SKY_secp256k1go_XYZ_Print(secp256k1go__XYZ p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XYZ_Print(secp256k1go__XYZ.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_XYZ_SetXY(secp256k1go__XYZ p0, secp256k1go__XY p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XYZ_SetXY(secp256k1go__XYZ.getCPtr(p0), secp256k1go__XY.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_XYZ_IsInfinity(secp256k1go__XYZ p0, SWIGTYPE_p_unsigned_char p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XYZ_IsInfinity(secp256k1go__XYZ.getCPtr(p0), SWIGTYPE_p_unsigned_char.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_XYZ_IsValid(secp256k1go__XYZ p0, SWIGTYPE_p_unsigned_char p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XYZ_IsValid(secp256k1go__XYZ.getCPtr(p0), SWIGTYPE_p_unsigned_char.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_XYZ_Normalize(secp256k1go__XYZ p0) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XYZ_Normalize(secp256k1go__XYZ.getCPtr(p0));
    return ret;
  }

  public static uint SKY_secp256k1go_XYZ_Equals(secp256k1go__XYZ p0, secp256k1go__XYZ p1, SWIGTYPE_p_unsigned_char p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XYZ_Equals(secp256k1go__XYZ.getCPtr(p0), secp256k1go__XYZ.getCPtr(p1), SWIGTYPE_p_unsigned_char.getCPtr(p2));
    return ret;
  }

  public static uint SKY_secp256k1go_XYZ_ECmult(secp256k1go__XYZ p0, secp256k1go__XYZ p1, SWIGTYPE_p_Handle p2, SWIGTYPE_p_Handle p3) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XYZ_ECmult(secp256k1go__XYZ.getCPtr(p0), secp256k1go__XYZ.getCPtr(p1), SWIGTYPE_p_Handle.getCPtr(p2), SWIGTYPE_p_Handle.getCPtr(p3));
    return ret;
  }

  public static uint SKY_secp256k1go_XYZ_Neg(secp256k1go__XYZ p0, secp256k1go__XYZ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XYZ_Neg(secp256k1go__XYZ.getCPtr(p0), secp256k1go__XYZ.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_XYZ_Double(secp256k1go__XYZ p0, secp256k1go__XYZ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XYZ_Double(secp256k1go__XYZ.getCPtr(p0), secp256k1go__XYZ.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_XYZ_AddXY(secp256k1go__XYZ p0, secp256k1go__XYZ p1, secp256k1go__XY p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XYZ_AddXY(secp256k1go__XYZ.getCPtr(p0), secp256k1go__XYZ.getCPtr(p1), secp256k1go__XY.getCPtr(p2));
    return ret;
  }

  public static uint SKY_secp256k1go_XYZ_Add(secp256k1go__XYZ p0, secp256k1go__XYZ p1, secp256k1go__XYZ p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_XYZ_Add(secp256k1go__XYZ.getCPtr(p0), secp256k1go__XYZ.getCPtr(p1), secp256k1go__XYZ.getCPtr(p2));
    return ret;
  }

  public static uint SKY_secp256k1go_ECmultGen(secp256k1go__XYZ p0, SWIGTYPE_p_Handle p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_ECmultGen(secp256k1go__XYZ.getCPtr(p0), SWIGTYPE_p_Handle.getCPtr(p1));
    return ret;
  }

  public static uint SKY_encrypt_Sha256Xor_Encrypt(GoSlice p0, GoSlice p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_encrypt_Sha256Xor_Encrypt(GoSlice.getCPtr(p0), GoSlice.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_encrypt_Sha256Xor_Decrypt(GoSlice p0, GoSlice p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_encrypt_Sha256Xor_Decrypt(GoSlice.getCPtr(p0), GoSlice.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_droplet_FromString(_GoString_ p0, SWIGTYPE_p_unsigned_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_droplet_FromString(_GoString_.getCPtr(p0), SWIGTYPE_p_unsigned_long_long.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_droplet_ToString(ulong p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_droplet_ToString(p0, SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_wallet_CryptoTypeFromString(_GoString_ p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_wallet_CryptoTypeFromString(_GoString_.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void SKY_handle_close(SWIGTYPE_p_Handle p0) {
    skycoinPINVOKE.SKY_handle_close(SWIGTYPE_p_Handle.getCPtr(p0));
  }

  public static uint SKY_handle_copy(SWIGTYPE_p_Handle p0) {
    uint ret = skycoinPINVOKE.SKY_handle_copy(SWIGTYPE_p_Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_logging_EnableColors() {
    uint ret = skycoinPINVOKE.SKY_logging_EnableColors();
    return ret;
  }

  public static uint SKY_logging_DisableColors() {
    uint ret = skycoinPINVOKE.SKY_logging_DisableColors();
    return ret;
  }

  public static uint SKY_logging_Disable() {
    uint ret = skycoinPINVOKE.SKY_logging_Disable();
    return ret;
  }

  public static uint SKY_map_Get(SWIGTYPE_p_GoStringMap_ p0, _GoString_ p1, SWIGTYPE_p_GoString_ p2) {
    uint ret = skycoinPINVOKE.SKY_map_Get(SWIGTYPE_p_GoStringMap_.getCPtr(p0), _GoString_.getCPtr(p1), SWIGTYPE_p_GoString_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static byte SKY_map_HasKey(SWIGTYPE_p_GoStringMap_ p0, _GoString_ p1) {
    byte ret = skycoinPINVOKE.SKY_map_HasKey(SWIGTYPE_p_GoStringMap_.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_map_Close(SWIGTYPE_p_GoStringMap_ p0) {
    uint ret = skycoinPINVOKE.SKY_map_Close(SWIGTYPE_p_GoStringMap_.getCPtr(p0));
    return ret;
  }

  public static uint SKY_cipher_DecodeBase58Address(_GoString_ p0, cipher__Address p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_DecodeBase58Address(_GoString_.getCPtr(p0), cipher__Address.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_AddressFromBytes(GoSlice p0, cipher__Address p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_AddressFromBytes(GoSlice.getCPtr(p0), cipher__Address.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_AddressFromPubKey(SWIGTYPE_p_cipher_PubKey p0, cipher__Address p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_AddressFromPubKey(SWIGTYPE_p_a_33__GoUint8_.getCPtr(p0), cipher__Address.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_AddressFromSecKey(SWIGTYPE_p_a_32__GoUint8_ p0, cipher__Address p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_AddressFromSecKey(SWIGTYPE_p_a_32__GoUint8_.getCPtr(p0), cipher__Address.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_BitcoinDecodeBase58Address(_GoString_ p0, cipher__Address p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_BitcoinDecodeBase58Address(_GoString_.getCPtr(p0), cipher__Address.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_Address_Null(cipher__Address p0, SWIGTYPE_p_unsigned_char p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_Address_Null(cipher__Address.getCPtr(p0), SWIGTYPE_p_unsigned_char.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_Address_Bytes(cipher__Address p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_Address_Bytes(cipher__Address.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_Address_BitcoinBytes(cipher__Address p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_Address_BitcoinBytes(cipher__Address.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_Address_Verify(cipher__Address p0, SWIGTYPE_p_cipher_PubKey p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_Address_Verify(cipher__Address.getCPtr(p0), SWIGTYPE_p_a_33__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_Address_String(cipher__Address p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_Address_String(cipher__Address.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_Address_BitcoinString(cipher__Address p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_Address_BitcoinString(cipher__Address.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_Address_Checksum(cipher__Address p0, SWIGTYPE_p_a_4__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_Address_Checksum(cipher__Address.getCPtr(p0), SWIGTYPE_p_a_4__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_Address_BitcoinChecksum(cipher__Address p0, SWIGTYPE_p_a_4__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_Address_BitcoinChecksum(cipher__Address.getCPtr(p0), SWIGTYPE_p_a_4__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_BitcoinAddressFromPubkey(SWIGTYPE_p_cipher_PubKey p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_BitcoinAddressFromPubkey(SWIGTYPE_p_a_33__GoUint8_.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_BitcoinWalletImportFormatFromSeckey(SWIGTYPE_p_a_32__GoUint8_ p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_BitcoinWalletImportFormatFromSeckey(SWIGTYPE_p_a_32__GoUint8_.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_BitcoinAddressFromBytes(GoSlice p0, cipher__Address p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_BitcoinAddressFromBytes(GoSlice.getCPtr(p0), cipher__Address.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_SecKeyFromWalletImportFormat(_GoString_ p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_SecKeyFromWalletImportFormat(_GoString_.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_JsonEncode_Handle(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_JsonEncode_Handle(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_Handle_Progress_GetCurrent(SWIGTYPE_p_Handle p0, SWIGTYPE_p_unsigned_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_Handle_Progress_GetCurrent(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_unsigned_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_Handle_Block_GetHeadSeq(SWIGTYPE_p_Handle p0, SWIGTYPE_p_unsigned_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_Handle_Block_GetHeadSeq(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_unsigned_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_Handle_Block_GetHeadHash(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_Handle_Block_GetHeadHash(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_Handle_Block_GetPreviousBlockHash(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_Handle_Block_GetPreviousBlockHash(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_Handle_Blocks_GetAt(SWIGTYPE_p_Handle p0, ulong p1) {
    uint ret = skycoinPINVOKE.SKY_Handle_Blocks_GetAt(SWIGTYPE_p_Handle.getCPtr(p0), p1);
    return ret;
  }

  public static uint SKY_Handle_Blocks_GetCount(SWIGTYPE_p_Handle p0, SWIGTYPE_p_unsigned_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_Handle_Blocks_GetCount(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_unsigned_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_Handle_Connections_GetCount(SWIGTYPE_p_Handle p0, SWIGTYPE_p_unsigned_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_Handle_Connections_GetCount(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_unsigned_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_Handle_Strings_GetCount(SWIGTYPE_p_Strings__Handle p0, SWIGTYPE_p_unsigned_int p1) {
    uint ret = skycoinPINVOKE.SKY_Handle_Strings_GetCount(SWIGTYPE_p_Strings__Handle.getCPtr(p0), SWIGTYPE_p_unsigned_int.getCPtr(p1));
    return ret;
  }

  public static uint SKY_Handle_Strings_Sort(SWIGTYPE_p_Strings__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_Handle_Strings_Sort(SWIGTYPE_p_Strings__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_Handle_Strings_GetAt(SWIGTYPE_p_Strings__Handle p0, long p1, SWIGTYPE_p_GoString_ p2) {
    uint ret = skycoinPINVOKE.SKY_Handle_Strings_GetAt(SWIGTYPE_p_Strings__Handle.getCPtr(p0), p1, SWIGTYPE_p_GoString_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_api_Handle_Client_GetWalletDir(SWIGTYPE_p_Client__Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_Client_GetWalletDir(SWIGTYPE_p_Client__Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_Handle_Client_GetWalletFileName(SWIGTYPE_p_WalletResponse__Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_Client_GetWalletFileName(SWIGTYPE_p_WalletResponse__Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_Handle_Client_GetWalletLabel(SWIGTYPE_p_WalletResponse__Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_Client_GetWalletLabel(SWIGTYPE_p_WalletResponse__Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_Handle_Client_GetWalletFullPath(SWIGTYPE_p_Client__Handle p0, SWIGTYPE_p_WalletResponse__Handle p1, SWIGTYPE_p_GoString_ p2) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_Client_GetWalletFullPath(SWIGTYPE_p_Client__Handle.getCPtr(p0), SWIGTYPE_p_WalletResponse__Handle.getCPtr(p1), SWIGTYPE_p_GoString_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_api_Handle_GetWalletMeta(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoStringMap_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_GetWalletMeta(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoStringMap_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_Handle_GetWalletEntriesCount(SWIGTYPE_p_Handle p0, SWIGTYPE_p_unsigned_int p1) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_GetWalletEntriesCount(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_unsigned_int.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_Handle_Client_GetWalletResponseEntriesCount(SWIGTYPE_p_WalletResponse__Handle p0, SWIGTYPE_p_unsigned_int p1) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_Client_GetWalletResponseEntriesCount(SWIGTYPE_p_WalletResponse__Handle.getCPtr(p0), SWIGTYPE_p_unsigned_int.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_Handle_WalletGetEntry(SWIGTYPE_p_Handle p0, uint p1, cipher__Address p2, SWIGTYPE_p_cipher_PubKey p3) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_WalletGetEntry(SWIGTYPE_p_Handle.getCPtr(p0), p1, cipher__Address.getCPtr(p2), SWIGTYPE_p_a_33__GoUint8_.getCPtr(p3));
    return ret;
  }

  public static uint SKY_api_Handle_WalletResponseGetEntry(SWIGTYPE_p_WalletResponse__Handle p0, uint p1, SWIGTYPE_p_GoString_ p2, SWIGTYPE_p_GoString_ p3) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_WalletResponseGetEntry(SWIGTYPE_p_WalletResponse__Handle.getCPtr(p0), p1, SWIGTYPE_p_GoString_.getCPtr(p2), SWIGTYPE_p_GoString_.getCPtr(p3));
    return ret;
  }

  public static uint SKY_api_Handle_WalletResponseIsEncrypted(SWIGTYPE_p_WalletResponse__Handle p0, SWIGTYPE_p_unsigned_char p1) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_WalletResponseIsEncrypted(SWIGTYPE_p_WalletResponse__Handle.getCPtr(p0), SWIGTYPE_p_unsigned_char.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_Handle_WalletResponseGetCryptoType(SWIGTYPE_p_WalletResponse__Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_WalletResponseGetCryptoType(SWIGTYPE_p_WalletResponse__Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_Handle_WalletsResponseGetCount(SWIGTYPE_p_Wallets__Handle p0, SWIGTYPE_p_unsigned_int p1) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_WalletsResponseGetCount(SWIGTYPE_p_Wallets__Handle.getCPtr(p0), SWIGTYPE_p_unsigned_int.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_Handle_WalletsResponseGetAt(SWIGTYPE_p_Wallets__Handle p0, uint p1, SWIGTYPE_p_WalletResponse__Handle p2) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_WalletsResponseGetAt(SWIGTYPE_p_Wallets__Handle.getCPtr(p0), p1, SWIGTYPE_p_WalletResponse__Handle.getCPtr(p2));
    return ret;
  }

  public static uint SKY_api_Handle_GetWalletFolderAddress(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_GetWalletFolderAddress(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_Handle_GetWalletSeed(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_GetWalletSeed(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_Handle_GetWalletLastSeed(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_GetWalletLastSeed(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_api_Handle_GetBuildInfoData(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1, SWIGTYPE_p_GoString_ p2, SWIGTYPE_p_GoString_ p3) {
    uint ret = skycoinPINVOKE.SKY_api_Handle_GetBuildInfoData(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1), SWIGTYPE_p_GoString_.getCPtr(p2), SWIGTYPE_p_GoString_.getCPtr(p3));
    return ret;
  }

  public static uint SKY_ripemd160_New() {
    uint ret = skycoinPINVOKE.SKY_ripemd160_New();
    return ret;
  }

  public static uint SKY_ripemd160_Write(SWIGTYPE_p_Handle p0, GoSlice p1, SWIGTYPE_p_long_long p2) {
    uint ret = skycoinPINVOKE.SKY_ripemd160_Write(SWIGTYPE_p_Handle.getCPtr(p0), GoSlice.getCPtr(p1), SWIGTYPE_p_long_long.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_ripemd160_Sum(SWIGTYPE_p_Handle p0, GoSlice p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_ripemd160_Sum(SWIGTYPE_p_Handle.getCPtr(p0), GoSlice.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_Number_Create() {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Number_Create();
    return ret;
  }

  public static uint SKY_secp256k1go_Number_Print(SWIGTYPE_p_Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Number_Print(SWIGTYPE_p_Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_Number_SetHex(SWIGTYPE_p_Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Number_SetHex(SWIGTYPE_p_Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_Number_IsOdd(SWIGTYPE_p_Handle p0, SWIGTYPE_p_unsigned_char p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Number_IsOdd(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_unsigned_char.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_Number_IsEqual(SWIGTYPE_p_Handle p0, SWIGTYPE_p_Handle p1, SWIGTYPE_p_unsigned_char p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Number_IsEqual(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_Handle.getCPtr(p1), SWIGTYPE_p_unsigned_char.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_UxOut_Hash(coin__UxOut p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_UxOut_Hash(coin__UxOut.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_UxOut_SnapshotHash(coin__UxOut p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_UxOut_SnapshotHash(coin__UxOut.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_UxBody_Hash(coin__UxBody p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_UxBody_Hash(coin__UxBody.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_UxOut_CoinHours(coin__UxOut p0, ulong p1, SWIGTYPE_p_unsigned_long_long p2) {
    uint ret = skycoinPINVOKE.SKY_coin_UxOut_CoinHours(coin__UxOut.getCPtr(p0), p1, SWIGTYPE_p_unsigned_long_long.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_UxArray_Hashes(SWIGTYPE_p_GoSlice_ p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_UxArray_Hashes(SWIGTYPE_p_GoSlice_.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_UxArray_HasDupes(SWIGTYPE_p_GoSlice_ p0, SWIGTYPE_p_unsigned_char p1) {
    uint ret = skycoinPINVOKE.SKY_coin_UxArray_HasDupes(SWIGTYPE_p_GoSlice_.getCPtr(p0), SWIGTYPE_p_unsigned_char.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_UxArray_Sort(SWIGTYPE_p_GoSlice_ p0) {
    uint ret = skycoinPINVOKE.SKY_coin_UxArray_Sort(SWIGTYPE_p_GoSlice_.getCPtr(p0));
    return ret;
  }

  public static uint SKY_coin_UxArray_Len(SWIGTYPE_p_GoSlice_ p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_UxArray_Len(SWIGTYPE_p_GoSlice_.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_UxArray_Less(SWIGTYPE_p_GoSlice_ p0, long p1, long p2, SWIGTYPE_p_unsigned_char p3) {
    uint ret = skycoinPINVOKE.SKY_coin_UxArray_Less(SWIGTYPE_p_GoSlice_.getCPtr(p0), p1, p2, SWIGTYPE_p_unsigned_char.getCPtr(p3));
    return ret;
  }

  public static uint SKY_coin_UxArray_Swap(SWIGTYPE_p_GoSlice_ p0, long p1, long p2) {
    uint ret = skycoinPINVOKE.SKY_coin_UxArray_Swap(SWIGTYPE_p_GoSlice_.getCPtr(p0), p1, p2);
    return ret;
  }

  public static uint SKY_coin_UxArray_Coins(SWIGTYPE_p_GoSlice_ p0, SWIGTYPE_p_unsigned_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_UxArray_Coins(SWIGTYPE_p_GoSlice_.getCPtr(p0), SWIGTYPE_p_unsigned_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_UxArray_CoinHours(SWIGTYPE_p_GoSlice_ p0, ulong p1, SWIGTYPE_p_unsigned_long_long p2) {
    uint ret = skycoinPINVOKE.SKY_coin_UxArray_CoinHours(SWIGTYPE_p_GoSlice_.getCPtr(p0), p1, SWIGTYPE_p_unsigned_long_long.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_UxArray_Sub(SWIGTYPE_p_GoSlice_ p0, SWIGTYPE_p_GoSlice_ p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_coin_UxArray_Sub(SWIGTYPE_p_GoSlice_.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_UxArray_Add(SWIGTYPE_p_GoSlice_ p0, SWIGTYPE_p_GoSlice_ p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_coin_UxArray_Add(SWIGTYPE_p_GoSlice_.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_NewAddressUxOuts(SWIGTYPE_p_GoSlice_ p0) {
    uint ret = skycoinPINVOKE.SKY_coin_NewAddressUxOuts(SWIGTYPE_p_GoSlice_.getCPtr(p0));
    return ret;
  }

  public static uint SKY_coin_AddressUxOuts_Keys(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_AddressUxOuts_Keys(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_AddressUxOuts_Flatten(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_AddressUxOuts_Flatten(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_AddressUxOuts_Sub(SWIGTYPE_p_Handle p0, SWIGTYPE_p_Handle p1) {
    uint ret = skycoinPINVOKE.SKY_coin_AddressUxOuts_Sub(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_Handle.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_AddressUxOuts_Add(SWIGTYPE_p_Handle p0, SWIGTYPE_p_Handle p1) {
    uint ret = skycoinPINVOKE.SKY_coin_AddressUxOuts_Add(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_Handle.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_AddressUxOuts_Get(SWIGTYPE_p_Handle p0, cipher__Address p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_coin_AddressUxOuts_Get(SWIGTYPE_p_Handle.getCPtr(p0), cipher__Address.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_AddressUxOuts_HasKey(SWIGTYPE_p_Handle p0, cipher__Address p1, SWIGTYPE_p_unsigned_char p2) {
    uint ret = skycoinPINVOKE.SKY_coin_AddressUxOuts_HasKey(SWIGTYPE_p_Handle.getCPtr(p0), cipher__Address.getCPtr(p1), SWIGTYPE_p_unsigned_char.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_AddressUxOuts_GetOutputLength(SWIGTYPE_p_Handle p0, cipher__Address p1, SWIGTYPE_p_long_long p2) {
    uint ret = skycoinPINVOKE.SKY_coin_AddressUxOuts_GetOutputLength(SWIGTYPE_p_Handle.getCPtr(p0), cipher__Address.getCPtr(p1), SWIGTYPE_p_long_long.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_AddressUxOuts_Length(SWIGTYPE_p_Handle p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_AddressUxOuts_Length(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_AddressUxOuts_Set(SWIGTYPE_p_Handle p0, cipher__Address p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_coin_AddressUxOuts_Set(SWIGTYPE_p_Handle.getCPtr(p0), cipher__Address.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_encrypt_ScryptChacha20poly1305_Encrypt(encrypt__ScryptChacha20poly1305 p0, GoSlice p1, GoSlice p2, SWIGTYPE_p_GoSlice_ p3) {
    uint ret = skycoinPINVOKE.SKY_encrypt_ScryptChacha20poly1305_Encrypt(encrypt__ScryptChacha20poly1305.getCPtr(p0), GoSlice.getCPtr(p1), GoSlice.getCPtr(p2), SWIGTYPE_p_GoSlice_.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_encrypt_ScryptChacha20poly1305_Decrypt(encrypt__ScryptChacha20poly1305 p0, GoSlice p1, GoSlice p2, SWIGTYPE_p_GoSlice_ p3) {
    uint ret = skycoinPINVOKE.SKY_encrypt_ScryptChacha20poly1305_Decrypt(encrypt__ScryptChacha20poly1305.getCPtr(p0), GoSlice.getCPtr(p1), GoSlice.getCPtr(p2), SWIGTYPE_p_GoSlice_.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_wallet_CreateOptionsHandle(_GoString_ p0, _GoString_ p1, _GoString_ p2, byte p3, _GoString_ p4, _GoString_ p5, ulong p6) {
    uint ret = skycoinPINVOKE.SKY_wallet_CreateOptionsHandle(_GoString_.getCPtr(p0), _GoString_.getCPtr(p1), _GoString_.getCPtr(p2), p3, _GoString_.getCPtr(p4), _GoString_.getCPtr(p5), p6);
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cli_AddPrivateKey(SWIGTYPE_p_Handle p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cli_AddPrivateKey(SWIGTYPE_p_Handle.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cli_AddPrivateKeyToFile(_GoString_ p0, _GoString_ p1, SWIGTYPE_p_Handle p2) {
    uint ret = skycoinPINVOKE.SKY_cli_AddPrivateKeyToFile(_GoString_.getCPtr(p0), _GoString_.getCPtr(p1), SWIGTYPE_p_Handle.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_GenerateKeyPair(SWIGTYPE_p_GoSlice_ p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_GenerateKeyPair(SWIGTYPE_p_GoSlice_.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1_PubkeyFromSeckey(GoSlice p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_PubkeyFromSeckey(GoSlice.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_UncompressPubkey(GoSlice p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_UncompressPubkey(GoSlice.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_UncompressedPubkeyFromSeckey(GoSlice p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_UncompressedPubkeyFromSeckey(GoSlice.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_Secp256k1Hash(GoSlice p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_Secp256k1Hash(GoSlice.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_GenerateDeterministicKeyPair(GoSlice p0, SWIGTYPE_p_GoSlice_ p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_GenerateDeterministicKeyPair(GoSlice.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_DeterministicKeyPairIterator(GoSlice p0, SWIGTYPE_p_GoSlice_ p1, SWIGTYPE_p_GoSlice_ p2, SWIGTYPE_p_GoSlice_ p3) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_DeterministicKeyPairIterator(GoSlice.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2), SWIGTYPE_p_GoSlice_.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_Sign(GoSlice p0, GoSlice p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_Sign(GoSlice.getCPtr(p0), GoSlice.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_SignDeterministic(GoSlice p0, GoSlice p1, GoSlice p2, SWIGTYPE_p_GoSlice_ p3) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_SignDeterministic(GoSlice.getCPtr(p0), GoSlice.getCPtr(p1), GoSlice.getCPtr(p2), SWIGTYPE_p_GoSlice_.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_VerifySeckey(GoSlice p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_VerifySeckey(GoSlice.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_VerifyPubkey(GoSlice p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_VerifyPubkey(GoSlice.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_VerifySignatureValidity(GoSlice p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_VerifySignatureValidity(GoSlice.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_VerifySignature(GoSlice p0, GoSlice p1, GoSlice p2, SWIGTYPE_p_long_long p3) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_VerifySignature(GoSlice.getCPtr(p0), GoSlice.getCPtr(p1), GoSlice.getCPtr(p2), SWIGTYPE_p_long_long.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_SignatureErrorString(GoSlice p0, GoSlice p1, GoSlice p2, SWIGTYPE_p_GoString_ p3) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_SignatureErrorString(GoSlice.getCPtr(p0), GoSlice.getCPtr(p1), GoSlice.getCPtr(p2), SWIGTYPE_p_GoString_.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_RecoverPubkey(GoSlice p0, GoSlice p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_RecoverPubkey(GoSlice.getCPtr(p0), GoSlice.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1_ECDH(GoSlice p0, GoSlice p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1_ECDH(GoSlice.getCPtr(p0), GoSlice.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_apputil_CatchInterruptPanic() {
    uint ret = skycoinPINVOKE.SKY_apputil_CatchInterruptPanic();
    return ret;
  }

  public static uint SKY_apputil_CatchDebug() {
    uint ret = skycoinPINVOKE.SKY_apputil_CatchDebug();
    return ret;
  }

  public static uint SKY_apputil_PrintProgramStatus() {
    uint ret = skycoinPINVOKE.SKY_apputil_PrintProgramStatus();
    return ret;
  }

  public static uint SKY_cert_CreateCertIfNotExists(_GoString_ p0, _GoString_ p1, _GoString_ p2, _GoString_ p3) {
    uint ret = skycoinPINVOKE.SKY_cert_CreateCertIfNotExists(_GoString_.getCPtr(p0), _GoString_.getCPtr(p1), _GoString_.getCPtr(p2), _GoString_.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_fee_VerifyTransactionFee(SWIGTYPE_p_Handle p0, ulong p1) {
    uint ret = skycoinPINVOKE.SKY_fee_VerifyTransactionFee(SWIGTYPE_p_Handle.getCPtr(p0), p1);
    return ret;
  }

  public static uint SKY_fee_VerifyTransactionFeeForHours(ulong p0, ulong p1) {
    uint ret = skycoinPINVOKE.SKY_fee_VerifyTransactionFeeForHours(p0, p1);
    return ret;
  }

  public static uint SKY_fee_RequiredFee(ulong p0, SWIGTYPE_p_unsigned_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_fee_RequiredFee(p0, SWIGTYPE_p_unsigned_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_fee_RemainingHours(ulong p0, SWIGTYPE_p_unsigned_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_fee_RemainingHours(p0, SWIGTYPE_p_unsigned_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_fee_TransactionFee(SWIGTYPE_p_Handle p0, ulong p1, SWIGTYPE_p_GoSlice_ p2, SWIGTYPE_p_unsigned_long_long p3) {
    uint ret = skycoinPINVOKE.SKY_fee_TransactionFee(SWIGTYPE_p_Handle.getCPtr(p0), p1, SWIGTYPE_p_GoSlice_.getCPtr(p2), SWIGTYPE_p_unsigned_long_long.getCPtr(p3));
    return ret;
  }

  public static uint SKY_cli_LoadConfig() {
    uint ret = skycoinPINVOKE.SKY_cli_LoadConfig();
    return ret;
  }

  public static uint SKY_cli_Config_FullWalletPath(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cli_Config_FullWalletPath(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cli_Config_FullDBPath(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cli_Config_FullDBPath(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cli_NewApp(SWIGTYPE_p_Handle p0, SWIGTYPE_p_App__Handle p1) {
    uint ret = skycoinPINVOKE.SKY_cli_NewApp(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_App__Handle.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cli_RPCClientFromContext(SWIGTYPE_p_Context__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_cli_RPCClientFromContext(SWIGTYPE_p_Context__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_cli_ConfigFromContext(SWIGTYPE_p_Context__Handle p0) {
    uint ret = skycoinPINVOKE.SKY_cli_ConfigFromContext(SWIGTYPE_p_Context__Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_cli_PasswordFromBytes_Password(SWIGTYPE_p_GoSlice_ p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_cli_PasswordFromBytes_Password(SWIGTYPE_p_GoSlice_.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cli_PasswordFromTerm_Password(SWIGTYPE_p_GoSlice_ p0) {
    uint ret = skycoinPINVOKE.SKY_cli_PasswordFromTerm_Password(SWIGTYPE_p_GoSlice_.getCPtr(p0));
    return ret;
  }

  public static uint SKY_cli_CreateRawTxFromWallet(SWIGTYPE_p_Handle p0, _GoString_ p1, _GoString_ p2, GoSlice p3, SWIGTYPE_p_Handle p4) {
    uint ret = skycoinPINVOKE.SKY_cli_CreateRawTxFromWallet(SWIGTYPE_p_Handle.getCPtr(p0), _GoString_.getCPtr(p1), _GoString_.getCPtr(p2), GoSlice.getCPtr(p3), SWIGTYPE_p_Handle.getCPtr(p4));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cli_CreateRawTxFromAddress(SWIGTYPE_p_Handle p0, _GoString_ p1, _GoString_ p2, _GoString_ p3, GoSlice p4, SWIGTYPE_p_Handle p5) {
    uint ret = skycoinPINVOKE.SKY_cli_CreateRawTxFromAddress(SWIGTYPE_p_Handle.getCPtr(p0), _GoString_.getCPtr(p1), _GoString_.getCPtr(p2), _GoString_.getCPtr(p3), GoSlice.getCPtr(p4), SWIGTYPE_p_Handle.getCPtr(p5));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cli_CreateRawTx(SWIGTYPE_p_Handle p0, SWIGTYPE_p_Handle p1, GoSlice p2, _GoString_ p3, GoSlice p4, GoSlice p5) {
    uint ret = skycoinPINVOKE.SKY_cli_CreateRawTx(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_Handle.getCPtr(p1), GoSlice.getCPtr(p2), _GoString_.getCPtr(p3), GoSlice.getCPtr(p4), GoSlice.getCPtr(p5));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cli_NewTransaction(GoSlice p0, GoSlice p1, GoSlice p2) {
    uint ret = skycoinPINVOKE.SKY_cli_NewTransaction(GoSlice.getCPtr(p0), GoSlice.getCPtr(p1), GoSlice.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_file_InitDataDir(_GoString_ p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_file_InitDataDir(_GoString_.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_file_UserHome(SWIGTYPE_p_GoString_ p0) {
    uint ret = skycoinPINVOKE.SKY_file_UserHome(SWIGTYPE_p_GoString_.getCPtr(p0));
    return ret;
  }

  public static uint SKY_file_ResolveResourceDirectory(_GoString_ p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_file_ResolveResourceDirectory(_GoString_.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_file_DetermineResourcePath(_GoString_ p0, _GoString_ p1, _GoString_ p2, SWIGTYPE_p_GoString_ p3) {
    uint ret = skycoinPINVOKE.SKY_file_DetermineResourcePath(_GoString_.getCPtr(p0), _GoString_.getCPtr(p1), _GoString_.getCPtr(p2), SWIGTYPE_p_GoString_.getCPtr(p3));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cli_GetWalletOutputsFromFile(SWIGTYPE_p_Handle p0, _GoString_ p1, SWIGTYPE_p_ReadableOutputSet_Handle p2) {
    uint ret = skycoinPINVOKE.SKY_cli_GetWalletOutputsFromFile(SWIGTYPE_p_Handle.getCPtr(p0), _GoString_.getCPtr(p1), SWIGTYPE_p_ReadableOutputSet_Handle.getCPtr(p2));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cli_GetWalletOutputs(SWIGTYPE_p_Handle p0, SWIGTYPE_p_ReadableOutputSet_Handle p2) {
    uint ret = skycoinPINVOKE.SKY_cli_GetWalletOutputs(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_ReadableOutputSet_Handle.getCPtr(p2));
    return ret;
  }

  public static uint SKY_testutil_MakeAddress(cipher__Address p0) {
    uint ret = skycoinPINVOKE.SKY_testutil_MakeAddress(cipher__Address.getCPtr(p0));
    return ret;
  }

  public static uint SKY_secp256k1go_Field_String(secp256k1go__Field p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_String(secp256k1go__Field.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_Field_Print(secp256k1go__Field p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_Print(secp256k1go__Field.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_Field_SetB32(secp256k1go__Field p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_SetB32(secp256k1go__Field.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_Field_SetBytes(secp256k1go__Field p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_SetBytes(secp256k1go__Field.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_Field_SetHex(secp256k1go__Field p0, _GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_SetHex(secp256k1go__Field.getCPtr(p0), _GoString_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_Field_IsOdd(secp256k1go__Field p0, SWIGTYPE_p_unsigned_char p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_IsOdd(secp256k1go__Field.getCPtr(p0), SWIGTYPE_p_unsigned_char.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_Field_IsZero(secp256k1go__Field p0, SWIGTYPE_p_unsigned_char p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_IsZero(secp256k1go__Field.getCPtr(p0), SWIGTYPE_p_unsigned_char.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_Field_SetInt(secp256k1go__Field p0, uint p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_SetInt(secp256k1go__Field.getCPtr(p0), p1);
    return ret;
  }

  public static uint SKY_secp256k1go_Field_Normalize(secp256k1go__Field p0) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_Normalize(secp256k1go__Field.getCPtr(p0));
    return ret;
  }

  public static uint SKY_secp256k1go_Field_GetB32(secp256k1go__Field p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_GetB32(secp256k1go__Field.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_secp256k1go_Field_Equals(secp256k1go__Field p0, secp256k1go__Field p1, SWIGTYPE_p_unsigned_char p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_Equals(secp256k1go__Field.getCPtr(p0), secp256k1go__Field.getCPtr(p1), SWIGTYPE_p_unsigned_char.getCPtr(p2));
    return ret;
  }

  public static uint SKY_secp256k1go_Field_SetAdd(secp256k1go__Field p0, secp256k1go__Field p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_SetAdd(secp256k1go__Field.getCPtr(p0), secp256k1go__Field.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_Field_MulInt(secp256k1go__Field p0, uint p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_MulInt(secp256k1go__Field.getCPtr(p0), p1);
    return ret;
  }

  public static uint SKY_secp256k1go_Field_Negate(secp256k1go__Field p0, secp256k1go__Field p1, uint p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_Negate(secp256k1go__Field.getCPtr(p0), secp256k1go__Field.getCPtr(p1), p2);
    return ret;
  }

  public static uint SKY_secp256k1go_Field_Inv(secp256k1go__Field p0, secp256k1go__Field p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_Inv(secp256k1go__Field.getCPtr(p0), secp256k1go__Field.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_Field_Sqrt(secp256k1go__Field p0, secp256k1go__Field p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_Sqrt(secp256k1go__Field.getCPtr(p0), secp256k1go__Field.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_Field_InvVar(secp256k1go__Field p0, secp256k1go__Field p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_InvVar(secp256k1go__Field.getCPtr(p0), secp256k1go__Field.getCPtr(p1));
    return ret;
  }

  public static uint SKY_secp256k1go_Field_Mul(secp256k1go__Field p0, secp256k1go__Field p1, secp256k1go__Field p2) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_Mul(secp256k1go__Field.getCPtr(p0), secp256k1go__Field.getCPtr(p1), secp256k1go__Field.getCPtr(p2));
    return ret;
  }

  public static uint SKY_secp256k1go_Field_Sqr(secp256k1go__Field p0, secp256k1go__Field p1) {
    uint ret = skycoinPINVOKE.SKY_secp256k1go_Field_Sqr(secp256k1go__Field.getCPtr(p0), secp256k1go__Field.getCPtr(p1));
    return ret;
  }

  public static uint SKY_scrypt_Key(GoSlice p0, GoSlice p1, long p2, long p3, long p4, long p5, SWIGTYPE_p_GoSlice_ p6) {
    uint ret = skycoinPINVOKE.SKY_scrypt_Key(GoSlice.getCPtr(p0), GoSlice.getCPtr(p1), p2, p3, p4, p5, SWIGTYPE_p_GoSlice_.getCPtr(p6));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_Ripemd160_Set(SWIGTYPE_p_a_20__GoUint8_ p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_Ripemd160_Set(SWIGTYPE_p_a_20__GoUint8_.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_HashRipemd160(GoSlice p0, SWIGTYPE_p_a_20__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_HashRipemd160(GoSlice.getCPtr(p0), SWIGTYPE_p_a_20__GoUint8_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_SHA256_Set(SWIGTYPE_p_a_32__GoUint8_ p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_SHA256_Set(SWIGTYPE_p_a_32__GoUint8_.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_SHA256_Hex(SWIGTYPE_p_a_32__GoUint8_ p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_SHA256_Hex(SWIGTYPE_p_a_32__GoUint8_.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_SHA256_Xor(SWIGTYPE_p_a_32__GoUint8_ p0, SWIGTYPE_p_a_32__GoUint8_ p1, SWIGTYPE_p_a_32__GoUint8_ p2) {
    uint ret = skycoinPINVOKE.SKY_cipher_SHA256_Xor(SWIGTYPE_p_a_32__GoUint8_.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_cipher_SumSHA256(GoSlice p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_SumSHA256(GoSlice.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_SHA256FromHex(_GoString_ p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_SHA256FromHex(_GoString_.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_DoubleSHA256(GoSlice p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_DoubleSHA256(GoSlice.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_cipher_AddSHA256(SWIGTYPE_p_a_32__GoUint8_ p0, SWIGTYPE_p_a_32__GoUint8_ p1, SWIGTYPE_p_a_32__GoUint8_ p2) {
    uint ret = skycoinPINVOKE.SKY_cipher_AddSHA256(SWIGTYPE_p_a_32__GoUint8_.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_cipher_Merkle(GoSlice p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_Merkle(GoSlice.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_cipher_SHA256_Null(SWIGTYPE_p_a_32__GoUint8_ p0, SWIGTYPE_p_unsigned_char p1) {
    uint ret = skycoinPINVOKE.SKY_cipher_SHA256_Null(SWIGTYPE_p_a_32__GoUint8_.getCPtr(p0), SWIGTYPE_p_unsigned_char.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Create_Transaction() {
    uint ret = skycoinPINVOKE.SKY_coin_Create_Transaction();
    return ret;
  }

  public static uint SKY_coin_Transaction_Copy(SWIGTYPE_p_Handle p0) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_Copy(SWIGTYPE_p_Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_coin_GetTransactionObject(SWIGTYPE_p_Handle p0, SWIGTYPE_p_p_coin__Transaction p1) {
    uint ret = skycoinPINVOKE.SKY_coin_GetTransactionObject(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_p_coin__Transaction.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Transaction_ResetInputs(SWIGTYPE_p_Handle p0, long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_ResetInputs(SWIGTYPE_p_Handle.getCPtr(p0), p1);
    return ret;
  }

  public static uint SKY_coin_Transaction_GetInputsCount(SWIGTYPE_p_Handle p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_GetInputsCount(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Transaction_GetInputAt(SWIGTYPE_p_Handle p0, long p1, SWIGTYPE_p_a_32__GoUint8_ p2) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_GetInputAt(SWIGTYPE_p_Handle.getCPtr(p0), p1, SWIGTYPE_p_a_32__GoUint8_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_Transaction_SetInputAt(SWIGTYPE_p_Handle p0, long p1, SWIGTYPE_p_a_32__GoUint8_ p2) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_SetInputAt(SWIGTYPE_p_Handle.getCPtr(p0), p1, SWIGTYPE_p_a_32__GoUint8_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_Transaction_GetOutputsCount(SWIGTYPE_p_Handle p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_GetOutputsCount(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Transaction_GetOutputAt(SWIGTYPE_p_Handle p0, long p1, coin__TransactionOutput p2) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_GetOutputAt(SWIGTYPE_p_Handle.getCPtr(p0), p1, coin__TransactionOutput.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_Transaction_SetOutputAt(SWIGTYPE_p_Handle p0, long p1, coin__TransactionOutput p2) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_SetOutputAt(SWIGTYPE_p_Handle.getCPtr(p0), p1, coin__TransactionOutput.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_Transaction_GetSignaturesCount(SWIGTYPE_p_Handle p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_GetSignaturesCount(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Transaction_GetSignatureAt(SWIGTYPE_p_Handle p0, long p1, SWIGTYPE_p_a_65__GoUint8_ p2) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_GetSignatureAt(SWIGTYPE_p_Handle.getCPtr(p0), p1, SWIGTYPE_p_a_65__GoUint8_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_Transaction_SetSignatureAt(SWIGTYPE_p_Handle p0, long p1, SWIGTYPE_p_a_65__GoUint8_ p2) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_SetSignatureAt(SWIGTYPE_p_Handle.getCPtr(p0), p1, SWIGTYPE_p_a_65__GoUint8_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_Transaction_PushSignature(SWIGTYPE_p_Handle p0, SWIGTYPE_p_a_65__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_PushSignature(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_a_65__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Transaction_ResetOutputs(SWIGTYPE_p_Handle p0, long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_ResetOutputs(SWIGTYPE_p_Handle.getCPtr(p0), p1);
    return ret;
  }

  public static uint SKY_coin_Transaction_ResetSignatures(SWIGTYPE_p_Handle p0, long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_ResetSignatures(SWIGTYPE_p_Handle.getCPtr(p0), p1);
    return ret;
  }

  public static uint SKY_coin_Transaction_Verify(SWIGTYPE_p_Handle p0) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_Verify(SWIGTYPE_p_Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_coin_Transaction_VerifyInput(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_VerifyInput(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Transaction_PushInput(SWIGTYPE_p_Handle p0, SWIGTYPE_p_a_32__GoUint8_ p1, SWIGTYPE_p_unsigned_short p2) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_PushInput(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1), SWIGTYPE_p_unsigned_short.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_TransactionOutput_UxID(coin__TransactionOutput p0, SWIGTYPE_p_a_32__GoUint8_ p1, SWIGTYPE_p_a_32__GoUint8_ p2) {
    uint ret = skycoinPINVOKE.SKY_coin_TransactionOutput_UxID(coin__TransactionOutput.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_Transaction_PushOutput(SWIGTYPE_p_Handle p0, cipher__Address p1, ulong p2, ulong p3) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_PushOutput(SWIGTYPE_p_Handle.getCPtr(p0), cipher__Address.getCPtr(p1), p2, p3);
    return ret;
  }

  public static uint SKY_coin_Transaction_SignInputs(SWIGTYPE_p_Handle p0, GoSlice p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_SignInputs(SWIGTYPE_p_Handle.getCPtr(p0), GoSlice.getCPtr(p1));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_coin_Transaction_Size(SWIGTYPE_p_Handle p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_Size(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Transaction_Hash(SWIGTYPE_p_Handle p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_Hash(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Transaction_SizeHash(SWIGTYPE_p_Handle p0, SWIGTYPE_p_long_long p1, SWIGTYPE_p_a_32__GoUint8_ p2) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_SizeHash(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_Transaction_TxID(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_TxID(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Transaction_TxIDHex(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoString_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_TxIDHex(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoString_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Transaction_UpdateHeader(SWIGTYPE_p_Handle p0) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_UpdateHeader(SWIGTYPE_p_Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_coin_Transaction_HashInner(SWIGTYPE_p_Handle p0, SWIGTYPE_p_a_32__GoUint8_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_HashInner(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_a_32__GoUint8_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Transaction_Serialize(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_Serialize(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_TransactionDeserialize(GoSlice p0) {
    uint ret = skycoinPINVOKE.SKY_coin_TransactionDeserialize(GoSlice.getCPtr(p0));
    if (skycoinPINVOKE.SWIGPendingException.Pending) throw skycoinPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint SKY_coin_Transaction_OutputHours(SWIGTYPE_p_Handle p0, SWIGTYPE_p_unsigned_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transaction_OutputHours(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_unsigned_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Create_Transactions() {
    uint ret = skycoinPINVOKE.SKY_coin_Create_Transactions();
    return ret;
  }

  public static uint SKY_coin_GetTransactionsObject(SWIGTYPE_p_Handle p0, SWIGTYPE_p_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_GetTransactionsObject(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Transactions_Length(SWIGTYPE_p_Handle p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transactions_Length(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Transactions_Add(SWIGTYPE_p_Handle p0, SWIGTYPE_p_Handle p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transactions_Add(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_Handle.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Transactions_Fees(SWIGTYPE_p_Handle p0, SWIGTYPE_p_FeeCalculator p1, SWIGTYPE_p_unsigned_long_long p2) {
    uint ret = skycoinPINVOKE.SKY_coin_Transactions_Fees(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_FeeCalculator.getCPtr(p1), SWIGTYPE_p_unsigned_long_long.getCPtr(p2));
    return ret;
  }

  public static uint SKY_coin_Transactions_GetAt(SWIGTYPE_p_Handle p0, long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transactions_GetAt(SWIGTYPE_p_Handle.getCPtr(p0), p1);
    return ret;
  }

  public static uint SKY_coin_Transactions_Hashes(SWIGTYPE_p_Handle p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transactions_Hashes(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Transactions_Size(SWIGTYPE_p_Handle p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transactions_Size(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_Transactions_TruncateBytesTo(SWIGTYPE_p_Handle p0, long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_Transactions_TruncateBytesTo(SWIGTYPE_p_Handle.getCPtr(p0), p1);
    return ret;
  }

  public static uint SKY_coin_SortTransactions(SWIGTYPE_p_Handle p0, SWIGTYPE_p_FeeCalculator p1) {
    uint ret = skycoinPINVOKE.SKY_coin_SortTransactions(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_FeeCalculator.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_NewSortableTransactions(SWIGTYPE_p_Handle p0, SWIGTYPE_p_FeeCalculator p1) {
    uint ret = skycoinPINVOKE.SKY_coin_NewSortableTransactions(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_FeeCalculator.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_SortableTransactions_Sort(SWIGTYPE_p_Handle p0) {
    uint ret = skycoinPINVOKE.SKY_coin_SortableTransactions_Sort(SWIGTYPE_p_Handle.getCPtr(p0));
    return ret;
  }

  public static uint SKY_coin_SortableTransactions_Len(SWIGTYPE_p_Handle p0, SWIGTYPE_p_long_long p1) {
    uint ret = skycoinPINVOKE.SKY_coin_SortableTransactions_Len(SWIGTYPE_p_Handle.getCPtr(p0), SWIGTYPE_p_long_long.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_SortableTransactions_Less(SWIGTYPE_p_Handle p0, long p1, long p2, SWIGTYPE_p_unsigned_char p3) {
    uint ret = skycoinPINVOKE.SKY_coin_SortableTransactions_Less(SWIGTYPE_p_Handle.getCPtr(p0), p1, p2, SWIGTYPE_p_unsigned_char.getCPtr(p3));
    return ret;
  }

  public static uint SKY_coin_SortableTransactions_Swap(SWIGTYPE_p_Handle p0, long p1, long p2) {
    uint ret = skycoinPINVOKE.SKY_coin_SortableTransactions_Swap(SWIGTYPE_p_Handle.getCPtr(p0), p1, p2);
    return ret;
  }

  public static uint SKY_coin_VerifyTransactionCoinsSpending(SWIGTYPE_p_GoSlice_ p0, SWIGTYPE_p_GoSlice_ p1) {
    uint ret = skycoinPINVOKE.SKY_coin_VerifyTransactionCoinsSpending(SWIGTYPE_p_GoSlice_.getCPtr(p0), SWIGTYPE_p_GoSlice_.getCPtr(p1));
    return ret;
  }

  public static uint SKY_coin_VerifyTransactionHoursSpending(ulong p0, SWIGTYPE_p_GoSlice_ p1, SWIGTYPE_p_GoSlice_ p2) {
    uint ret = skycoinPINVOKE.SKY_coin_VerifyTransactionHoursSpending(p0, SWIGTYPE_p_GoSlice_.getCPtr(p1), SWIGTYPE_p_GoSlice_.getCPtr(p2));
    return ret;
  }

  public static readonly long SKY_OK = skycoinPINVOKE.get_SKY_OK();
  public static readonly long SKY_ERROR = skycoinPINVOKE.get_SKY_ERROR();
  public static readonly long SKY_PKG_API = skycoinPINVOKE.get_SKY_PKG_API();
  public static readonly long SKY_PKG_CIPHER = skycoinPINVOKE.get_SKY_PKG_CIPHER();
  public static readonly long SKY_PKG_CLI = skycoinPINVOKE.get_SKY_PKG_CLI();
  public static readonly long SKY_PKG_COIN = skycoinPINVOKE.get_SKY_PKG_COIN();
  public static readonly long SKY_PKG_CONSENSUS = skycoinPINVOKE.get_SKY_PKG_CONSENSUS();
  public static readonly long SKY_PKG_DAEMON = skycoinPINVOKE.get_SKY_PKG_DAEMON();
  public static readonly long SKY_PKG_GUI = skycoinPINVOKE.get_SKY_PKG_GUI();
  public static readonly long SKY_PKG_SKYCOIN = skycoinPINVOKE.get_SKY_PKG_SKYCOIN();
  public static readonly long SKY_PKG_UTIL = skycoinPINVOKE.get_SKY_PKG_UTIL();
  public static readonly long SKY_PKG_VISOR = skycoinPINVOKE.get_SKY_PKG_VISOR();
  public static readonly long SKY_PKG_WALLET = skycoinPINVOKE.get_SKY_PKG_WALLET();
  public static readonly long SKY_ErrAddressInvalidLength = skycoinPINVOKE.get_SKY_ErrAddressInvalidLength();
  public static readonly long SKY_ErrAddressInvalidChecksum = skycoinPINVOKE.get_SKY_ErrAddressInvalidChecksum();
  public static readonly long SKY_ErrAddressInvalidVersion = skycoinPINVOKE.get_SKY_ErrAddressInvalidVersion();
  public static readonly long SKY_ErrAddressInvalidPubKey = skycoinPINVOKE.get_SKY_ErrAddressInvalidPubKey();
  public static readonly long SKY_ErrAddressInvalidFirstByte = skycoinPINVOKE.get_SKY_ErrAddressInvalidFirstByte();
  public static readonly long SKY_ErrAddressInvalidLastByte = skycoinPINVOKE.get_SKY_ErrAddressInvalidLastByte();
  public static readonly long SKY_ErrBufferUnderflow = skycoinPINVOKE.get_SKY_ErrBufferUnderflow();
  public static readonly long SKY_ErrInvalidOmitEmpty = skycoinPINVOKE.get_SKY_ErrInvalidOmitEmpty();
  public static readonly long SKY_ErrInvalidLengthPubKey = skycoinPINVOKE.get_SKY_ErrInvalidLengthPubKey();
  public static readonly long SKY_ErrPubKeyFromNullSecKey = skycoinPINVOKE.get_SKY_ErrPubKeyFromNullSecKey();
  public static readonly long SKY_ErrPubKeyFromBadSecKey = skycoinPINVOKE.get_SKY_ErrPubKeyFromBadSecKey();
  public static readonly long SKY_ErrInvalidLengthSecKey = skycoinPINVOKE.get_SKY_ErrInvalidLengthSecKey();
  public static readonly long SKY_ErrECHDInvalidPubKey = skycoinPINVOKE.get_SKY_ErrECHDInvalidPubKey();
  public static readonly long SKY_ErrECHDInvalidSecKey = skycoinPINVOKE.get_SKY_ErrECHDInvalidSecKey();
  public static readonly long SKY_ErrInvalidLengthSig = skycoinPINVOKE.get_SKY_ErrInvalidLengthSig();
  public static readonly long SKY_ErrInvalidLengthRipemd160 = skycoinPINVOKE.get_SKY_ErrInvalidLengthRipemd160();
  public static readonly long SKY_ErrInvalidLengthSHA256 = skycoinPINVOKE.get_SKY_ErrInvalidLengthSHA256();
  public static readonly long SKY_ErrInvalidBase58Char = skycoinPINVOKE.get_SKY_ErrInvalidBase58Char();
  public static readonly long SKY_ErrInvalidBase58String = skycoinPINVOKE.get_SKY_ErrInvalidBase58String();
  public static readonly long SKY_ErrInvalidBase58Length = skycoinPINVOKE.get_SKY_ErrInvalidBase58Length();
  public static readonly long SKY_ErrInvalidHexLength = skycoinPINVOKE.get_SKY_ErrInvalidHexLength();
  public static readonly long SKY_ErrInvalidBytesLength = skycoinPINVOKE.get_SKY_ErrInvalidBytesLength();
  public static readonly long SKY_ErrInvalidPubKey = skycoinPINVOKE.get_SKY_ErrInvalidPubKey();
  public static readonly long SKY_ErrInvalidSecKey = skycoinPINVOKE.get_SKY_ErrInvalidSecKey();
  public static readonly long SKY_ErrInvalidSigForPubKey = skycoinPINVOKE.get_SKY_ErrInvalidSigForPubKey();
  public static readonly long SKY_ErrInvalidSecKeyHex = skycoinPINVOKE.get_SKY_ErrInvalidSecKeyHex();
  public static readonly long SKY_ErrInvalidAddressForSig = skycoinPINVOKE.get_SKY_ErrInvalidAddressForSig();
  public static readonly long SKY_ErrInvalidHashForSig = skycoinPINVOKE.get_SKY_ErrInvalidHashForSig();
  public static readonly long SKY_ErrPubKeyRecoverMismatch = skycoinPINVOKE.get_SKY_ErrPubKeyRecoverMismatch();
  public static readonly long SKY_ErrInvalidSigInvalidPubKey = skycoinPINVOKE.get_SKY_ErrInvalidSigInvalidPubKey();
  public static readonly long SKY_ErrInvalidSigValidity = skycoinPINVOKE.get_SKY_ErrInvalidSigValidity();
  public static readonly long SKY_ErrInvalidSigForMessage = skycoinPINVOKE.get_SKY_ErrInvalidSigForMessage();
  public static readonly long SKY_ErrInvalidSecKyVerification = skycoinPINVOKE.get_SKY_ErrInvalidSecKyVerification();
  public static readonly long SKY_ErrNullPubKeyFromSecKey = skycoinPINVOKE.get_SKY_ErrNullPubKeyFromSecKey();
  public static readonly long SKY_ErrInvalidDerivedPubKeyFromSecKey = skycoinPINVOKE.get_SKY_ErrInvalidDerivedPubKeyFromSecKey();
  public static readonly long SKY_ErrInvalidPubKeyFromHash = skycoinPINVOKE.get_SKY_ErrInvalidPubKeyFromHash();
  public static readonly long SKY_ErrPubKeyFromSecKeyMissmatch = skycoinPINVOKE.get_SKY_ErrPubKeyFromSecKeyMissmatch();
  public static readonly long SKY_ErrTemporaryInsufficientBalance = skycoinPINVOKE.get_SKY_ErrTemporaryInsufficientBalance();
  public static readonly long SKY_ErrAddress = skycoinPINVOKE.get_SKY_ErrAddress();
  public static readonly long SKY_ErrWalletName = skycoinPINVOKE.get_SKY_ErrWalletName();
  public static readonly long SKY_ErrJSONMarshal = skycoinPINVOKE.get_SKY_ErrJSONMarshal();
  public static readonly long SKY_WalletLoadError = skycoinPINVOKE.get_SKY_WalletLoadError();
  public static readonly long SKY_WalletSaveError = skycoinPINVOKE.get_SKY_WalletSaveError();
  public static readonly long SKY_ErrAddEarnedCoinHoursAdditionOverflow = skycoinPINVOKE.get_SKY_ErrAddEarnedCoinHoursAdditionOverflow();
  public static readonly long SKY_ErrUint64MultOverflow = skycoinPINVOKE.get_SKY_ErrUint64MultOverflow();
  public static readonly long SKY_ErrUint64AddOverflow = skycoinPINVOKE.get_SKY_ErrUint64AddOverflow();
  public static readonly long SKY_ErrUint32AddOverflow = skycoinPINVOKE.get_SKY_ErrUint32AddOverflow();
  public static readonly long SKY_ErrUint64OverflowsInt64 = skycoinPINVOKE.get_SKY_ErrUint64OverflowsInt64();
  public static readonly long SKY_ErrInt64UnderflowsUint64 = skycoinPINVOKE.get_SKY_ErrInt64UnderflowsUint64();
  public static readonly long SKY_ErrPeerlistFull = skycoinPINVOKE.get_SKY_ErrPeerlistFull();
  public static readonly long SKY_ErrInvalidAddress = skycoinPINVOKE.get_SKY_ErrInvalidAddress();
  public static readonly long SKY_ErrNoLocalhost = skycoinPINVOKE.get_SKY_ErrNoLocalhost();
  public static readonly long SKY_ErrNotExternalIP = skycoinPINVOKE.get_SKY_ErrNotExternalIP();
  public static readonly long SKY_ErrPortTooLow = skycoinPINVOKE.get_SKY_ErrPortTooLow();
  public static readonly long SKY_ErrBlacklistedAddress = skycoinPINVOKE.get_SKY_ErrBlacklistedAddress();
  public static readonly long SKY_ErrDisconnectReadFailed = skycoinPINVOKE.get_SKY_ErrDisconnectReadFailed();
  public static readonly long SKY_ErrDisconnectWriteFailed = skycoinPINVOKE.get_SKY_ErrDisconnectWriteFailed();
  public static readonly long SKY_ErrDisconnectSetReadDeadlineFailed = skycoinPINVOKE.get_SKY_ErrDisconnectSetReadDeadlineFailed();
  public static readonly long SKY_ErrDisconnectInvalidMessageLength = skycoinPINVOKE.get_SKY_ErrDisconnectInvalidMessageLength();
  public static readonly long SKY_ErrDisconnectMalformedMessage = skycoinPINVOKE.get_SKY_ErrDisconnectMalformedMessage();
  public static readonly long SKY_ErrDisconnectUnknownMessage = skycoinPINVOKE.get_SKY_ErrDisconnectUnknownMessage();
  public static readonly long SKY_ErrDisconnectUnexpectedError = skycoinPINVOKE.get_SKY_ErrDisconnectUnexpectedError();
  public static readonly long SKY_ErrConnectionPoolClosed = skycoinPINVOKE.get_SKY_ErrConnectionPoolClosed();
  public static readonly long SKY_ErrWriteQueueFull = skycoinPINVOKE.get_SKY_ErrWriteQueueFull();
  public static readonly long SKY_ErrNoReachableConnections = skycoinPINVOKE.get_SKY_ErrNoReachableConnections();
  public static readonly long SKY_ErrMaxDefaultConnectionsReached = skycoinPINVOKE.get_SKY_ErrMaxDefaultConnectionsReached();
  public static readonly long SKY_ErrDisconnectInvalidVersion = skycoinPINVOKE.get_SKY_ErrDisconnectInvalidVersion();
  public static readonly long SKY_ErrDisconnectIntroductionTimeout = skycoinPINVOKE.get_SKY_ErrDisconnectIntroductionTimeout();
  public static readonly long SKY_ErrDisconnectVersionSendFailed = skycoinPINVOKE.get_SKY_ErrDisconnectVersionSendFailed();
  public static readonly long SKY_ErrDisconnectIsBlacklisted = skycoinPINVOKE.get_SKY_ErrDisconnectIsBlacklisted();
  public static readonly long SKY_ErrDisconnectSelf = skycoinPINVOKE.get_SKY_ErrDisconnectSelf();
  public static readonly long SKY_ErrDisconnectConnectedTwice = skycoinPINVOKE.get_SKY_ErrDisconnectConnectedTwice();
  public static readonly long SKY_ErrDisconnectIdle = skycoinPINVOKE.get_SKY_ErrDisconnectIdle();
  public static readonly long SKY_ErrDisconnectNoIntroduction = skycoinPINVOKE.get_SKY_ErrDisconnectNoIntroduction();
  public static readonly long SKY_ErrDisconnectIPLimitReached = skycoinPINVOKE.get_SKY_ErrDisconnectIPLimitReached();
  public static readonly long SKY_ErrDisconnectOtherError = skycoinPINVOKE.get_SKY_ErrDisconnectOtherError();
  public static readonly long SKY_ErrDisconnectMaxDefaultConnectionReached = skycoinPINVOKE.get_SKY_ErrDisconnectMaxDefaultConnectionReached();
  public static readonly long SKY_ErrDisconnectMaxOutgoingConnectionsReached = skycoinPINVOKE.get_SKY_ErrDisconnectMaxOutgoingConnectionsReached();
  public static readonly long SKY_ConnectionError = skycoinPINVOKE.get_SKY_ConnectionError();
  public static readonly long SKY_ErrTxnNoFee = skycoinPINVOKE.get_SKY_ErrTxnNoFee();
  public static readonly long SKY_ErrTxnInsufficientFee = skycoinPINVOKE.get_SKY_ErrTxnInsufficientFee();
  public static readonly long SKY_ErrTxnInsufficientCoinHours = skycoinPINVOKE.get_SKY_ErrTxnInsufficientCoinHours();
  public static readonly long SKY_ErrNegativeValue = skycoinPINVOKE.get_SKY_ErrNegativeValue();
  public static readonly long SKY_ErrTooManyDecimals = skycoinPINVOKE.get_SKY_ErrTooManyDecimals();
  public static readonly long SKY_ErrTooLarge = skycoinPINVOKE.get_SKY_ErrTooLarge();
  public static readonly long SKY_ErrEmptyDirectoryName = skycoinPINVOKE.get_SKY_ErrEmptyDirectoryName();
  public static readonly long SKY_ErrDotDirectoryName = skycoinPINVOKE.get_SKY_ErrDotDirectoryName();
  public static readonly long SKY_ErrHistoryDBCorrupted = skycoinPINVOKE.get_SKY_ErrHistoryDBCorrupted();
  public static readonly long SKY_ErrUxOutNotExist = skycoinPINVOKE.get_SKY_ErrUxOutNotExist();
  public static readonly long SKY_ErrNoHeadBlock = skycoinPINVOKE.get_SKY_ErrNoHeadBlock();
  public static readonly long SKY_ErrMissingSignature = skycoinPINVOKE.get_SKY_ErrMissingSignature();
  public static readonly long SKY_ErrUnspentNotExist = skycoinPINVOKE.get_SKY_ErrUnspentNotExist();
  public static readonly long SKY_ErrVerifyStopped = skycoinPINVOKE.get_SKY_ErrVerifyStopped();
  public static readonly long SKY_ErrCreateBucketFailed = skycoinPINVOKE.get_SKY_ErrCreateBucketFailed();
  public static readonly long SKY_ErrBucketNotExist = skycoinPINVOKE.get_SKY_ErrBucketNotExist();
  public static readonly long SKY_ErrTxnViolatesHardConstraint = skycoinPINVOKE.get_SKY_ErrTxnViolatesHardConstraint();
  public static readonly long SKY_ErrTxnViolatesSoftConstraint = skycoinPINVOKE.get_SKY_ErrTxnViolatesSoftConstraint();
  public static readonly long SKY_ErrTxnViolatesUserConstraint = skycoinPINVOKE.get_SKY_ErrTxnViolatesUserConstraint();
  public static readonly long SKY_ErrInsufficientBalance = skycoinPINVOKE.get_SKY_ErrInsufficientBalance();
  public static readonly long SKY_ErrInsufficientHours = skycoinPINVOKE.get_SKY_ErrInsufficientHours();
  public static readonly long SKY_ErrZeroSpend = skycoinPINVOKE.get_SKY_ErrZeroSpend();
  public static readonly long SKY_ErrSpendingUnconfirmed = skycoinPINVOKE.get_SKY_ErrSpendingUnconfirmed();
  public static readonly long SKY_ErrInvalidEncryptedField = skycoinPINVOKE.get_SKY_ErrInvalidEncryptedField();
  public static readonly long SKY_ErrWalletEncrypted = skycoinPINVOKE.get_SKY_ErrWalletEncrypted();
  public static readonly long SKY_ErrWalletNotEncrypted = skycoinPINVOKE.get_SKY_ErrWalletNotEncrypted();
  public static readonly long SKY_ErrMissingPassword = skycoinPINVOKE.get_SKY_ErrMissingPassword();
  public static readonly long SKY_ErrMissingEncrypt = skycoinPINVOKE.get_SKY_ErrMissingEncrypt();
  public static readonly long SKY_ErrInvalidPassword = skycoinPINVOKE.get_SKY_ErrInvalidPassword();
  public static readonly long SKY_ErrMissingSeed = skycoinPINVOKE.get_SKY_ErrMissingSeed();
  public static readonly long SKY_ErrMissingAuthenticated = skycoinPINVOKE.get_SKY_ErrMissingAuthenticated();
  public static readonly long SKY_ErrWrongCryptoType = skycoinPINVOKE.get_SKY_ErrWrongCryptoType();
  public static readonly long SKY_ErrWalletNotExist = skycoinPINVOKE.get_SKY_ErrWalletNotExist();
  public static readonly long SKY_ErrSeedUsed = skycoinPINVOKE.get_SKY_ErrSeedUsed();
  public static readonly long SKY_ErrWalletAPIDisabled = skycoinPINVOKE.get_SKY_ErrWalletAPIDisabled();
  public static readonly long SKY_ErrSeedAPIDisabled = skycoinPINVOKE.get_SKY_ErrSeedAPIDisabled();
  public static readonly long SKY_ErrWalletNameConflict = skycoinPINVOKE.get_SKY_ErrWalletNameConflict();
  public static readonly long SKY_ErrInvalidHoursSelectionMode = skycoinPINVOKE.get_SKY_ErrInvalidHoursSelectionMode();
  public static readonly long SKY_ErrInvalidHoursSelectionType = skycoinPINVOKE.get_SKY_ErrInvalidHoursSelectionType();
  public static readonly long SKY_ErrUnknownAddress = skycoinPINVOKE.get_SKY_ErrUnknownAddress();
  public static readonly long SKY_ErrUnknownUxOut = skycoinPINVOKE.get_SKY_ErrUnknownUxOut();
  public static readonly long SKY_ErrNoUnspents = skycoinPINVOKE.get_SKY_ErrNoUnspents();
  public static readonly long SKY_ErrNullChangeAddress = skycoinPINVOKE.get_SKY_ErrNullChangeAddress();
  public static readonly long SKY_ErrMissingTo = skycoinPINVOKE.get_SKY_ErrMissingTo();
  public static readonly long SKY_ErrZeroCoinsTo = skycoinPINVOKE.get_SKY_ErrZeroCoinsTo();
  public static readonly long SKY_ErrNullAddressTo = skycoinPINVOKE.get_SKY_ErrNullAddressTo();
  public static readonly long SKY_ErrDuplicateTo = skycoinPINVOKE.get_SKY_ErrDuplicateTo();
  public static readonly long SKY_ErrMissingWalletID = skycoinPINVOKE.get_SKY_ErrMissingWalletID();
  public static readonly long SKY_ErrIncludesNullAddress = skycoinPINVOKE.get_SKY_ErrIncludesNullAddress();
  public static readonly long SKY_ErrDuplicateAddresses = skycoinPINVOKE.get_SKY_ErrDuplicateAddresses();
  public static readonly long SKY_ErrZeroToHoursAuto = skycoinPINVOKE.get_SKY_ErrZeroToHoursAuto();
  public static readonly long SKY_ErrMissingModeAuto = skycoinPINVOKE.get_SKY_ErrMissingModeAuto();
  public static readonly long SKY_ErrInvalidHoursSelMode = skycoinPINVOKE.get_SKY_ErrInvalidHoursSelMode();
  public static readonly long SKY_ErrInvalidModeManual = skycoinPINVOKE.get_SKY_ErrInvalidModeManual();
  public static readonly long SKY_ErrInvalidHoursSelType = skycoinPINVOKE.get_SKY_ErrInvalidHoursSelType();
  public static readonly long SKY_ErrMissingShareFactor = skycoinPINVOKE.get_SKY_ErrMissingShareFactor();
  public static readonly long SKY_ErrInvalidShareFactor = skycoinPINVOKE.get_SKY_ErrInvalidShareFactor();
  public static readonly long SKY_ErrShareFactorOutOfRange = skycoinPINVOKE.get_SKY_ErrShareFactorOutOfRange();
  public static readonly long SKY_ErrWalletConstraint = skycoinPINVOKE.get_SKY_ErrWalletConstraint();
  public static readonly long SKY_ErrDuplicateUxOuts = skycoinPINVOKE.get_SKY_ErrDuplicateUxOuts();
  public static readonly long SKY_ErrUnknownWalletID = skycoinPINVOKE.get_SKY_ErrUnknownWalletID();
  public static readonly long SKY_ErrSHA256orMissingPassword = skycoinPINVOKE.get_SKY_ErrSHA256orMissingPassword();
  public static readonly long SKY_ErrSHA256LenghtDataOverflowMaxUint32 = skycoinPINVOKE.get_SKY_ErrSHA256LenghtDataOverflowMaxUint32();
  public static readonly long SKY_ErrVerifySignatureInvalidPubkeysLength = skycoinPINVOKE.get_SKY_ErrVerifySignatureInvalidPubkeysLength();
}

}
