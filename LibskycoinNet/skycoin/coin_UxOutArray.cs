//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class coin_UxOutArray : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal coin_UxOutArray(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(coin_UxOutArray obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~coin_UxOutArray() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          skycoinPINVOKE.delete_coin_UxOutArray(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public coin__UxOut getAt(int i) {
    global::System.IntPtr cPtr = skycoinPINVOKE.coin_UxOutArray_getAt(swigCPtr, i);
    coin__UxOut ret = (cPtr == global::System.IntPtr.Zero) ? null : new coin__UxOut(cPtr, false);
    return ret;
  }

  public int setAt(int i, coin__UxOut uxout) {
    int ret = skycoinPINVOKE.coin_UxOutArray_setAt(swigCPtr, i, coin__UxOut.getCPtr(uxout));
    return ret;
  }

  public int isEqual(coin_UxOutArray a) {
    int ret = skycoinPINVOKE.coin_UxOutArray_isEqual(swigCPtr, coin_UxOutArray.getCPtr(a));
    return ret;
  }

  public void allocate(int n) {
    skycoinPINVOKE.coin_UxOutArray_allocate(swigCPtr, n);
  }

  public void release() {
    skycoinPINVOKE.coin_UxOutArray_release(swigCPtr);
  }

  public coin__UxOut data {
    set {
      skycoinPINVOKE.coin_UxOutArray_data_set(swigCPtr, coin__UxOut.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = skycoinPINVOKE.coin_UxOutArray_data_get(swigCPtr);
      coin__UxOut ret = (cPtr == global::System.IntPtr.Zero) ? null : new coin__UxOut(cPtr, false);
      return ret;
    } 
  }

  public int count {
    set {
      skycoinPINVOKE.coin_UxOutArray_count_set(swigCPtr, value);
    } 
    get {
      int ret = skycoinPINVOKE.coin_UxOutArray_count_get(swigCPtr);
      return ret;
    } 
  }

  public coin_UxOutArray() : this(skycoinPINVOKE.new_coin_UxOutArray(), true) {
  }

}
