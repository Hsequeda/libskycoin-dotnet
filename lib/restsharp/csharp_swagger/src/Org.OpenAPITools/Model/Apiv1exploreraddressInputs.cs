/* 
 * Skycoin REST API.
 *
 * Skycoin is a next-generation cryptocurrency.
 *
 * OpenAPI spec version: 0.25.1
 * Contact: skycoin.doe@example.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Apiv1exploreraddressInputs
    /// </summary>
    [DataContract]
    public partial class Apiv1exploreraddressInputs :  IEquatable<Apiv1exploreraddressInputs>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Apiv1exploreraddressInputs" /> class.
        /// </summary>
        /// <param name="owner">owner.</param>
        /// <param name="hours">hours.</param>
        /// <param name="calculatedHours">calculatedHours.</param>
        /// <param name="coins">coins.</param>
        /// <param name="uxid">uxid.</param>
        public Apiv1exploreraddressInputs(string owner = default(string), long? hours = default(long?), long? calculatedHours = default(long?), string coins = default(string), string uxid = default(string))
        {
            this.Owner = owner;
            this.Hours = hours;
            this.CalculatedHours = calculatedHours;
            this.Coins = coins;
            this.Uxid = uxid;
        }
        
        /// <summary>
        /// Gets or Sets Owner
        /// </summary>
        [DataMember(Name="owner", EmitDefaultValue=false)]
        public string Owner { get; set; }

        /// <summary>
        /// Gets or Sets Hours
        /// </summary>
        [DataMember(Name="hours", EmitDefaultValue=false)]
        public long? Hours { get; set; }

        /// <summary>
        /// Gets or Sets CalculatedHours
        /// </summary>
        [DataMember(Name="calculated_hours", EmitDefaultValue=false)]
        public long? CalculatedHours { get; set; }

        /// <summary>
        /// Gets or Sets Coins
        /// </summary>
        [DataMember(Name="coins", EmitDefaultValue=false)]
        public string Coins { get; set; }

        /// <summary>
        /// Gets or Sets Uxid
        /// </summary>
        [DataMember(Name="uxid", EmitDefaultValue=false)]
        public string Uxid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Apiv1exploreraddressInputs {\n");
            sb.Append("  Owner: ").Append(Owner).Append("\n");
            sb.Append("  Hours: ").Append(Hours).Append("\n");
            sb.Append("  CalculatedHours: ").Append(CalculatedHours).Append("\n");
            sb.Append("  Coins: ").Append(Coins).Append("\n");
            sb.Append("  Uxid: ").Append(Uxid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Apiv1exploreraddressInputs);
        }

        /// <summary>
        /// Returns true if Apiv1exploreraddressInputs instances are equal
        /// </summary>
        /// <param name="input">Instance of Apiv1exploreraddressInputs to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Apiv1exploreraddressInputs input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Owner == input.Owner ||
                    (this.Owner != null &&
                    this.Owner.Equals(input.Owner))
                ) && 
                (
                    this.Hours == input.Hours ||
                    (this.Hours != null &&
                    this.Hours.Equals(input.Hours))
                ) && 
                (
                    this.CalculatedHours == input.CalculatedHours ||
                    (this.CalculatedHours != null &&
                    this.CalculatedHours.Equals(input.CalculatedHours))
                ) && 
                (
                    this.Coins == input.Coins ||
                    (this.Coins != null &&
                    this.Coins.Equals(input.Coins))
                ) && 
                (
                    this.Uxid == input.Uxid ||
                    (this.Uxid != null &&
                    this.Uxid.Equals(input.Uxid))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Owner != null)
                    hashCode = hashCode * 59 + this.Owner.GetHashCode();
                if (this.Hours != null)
                    hashCode = hashCode * 59 + this.Hours.GetHashCode();
                if (this.CalculatedHours != null)
                    hashCode = hashCode * 59 + this.CalculatedHours.GetHashCode();
                if (this.Coins != null)
                    hashCode = hashCode * 59 + this.Coins.GetHashCode();
                if (this.Uxid != null)
                    hashCode = hashCode * 59 + this.Uxid.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
